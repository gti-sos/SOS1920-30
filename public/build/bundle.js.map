{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../node_modules/clsx/dist/clsx.m.js","../../node_modules/sveltestrap/src/utils.js","../../node_modules/sveltestrap/src/Table.svelte","../../node_modules/sveltestrap/src/Button.svelte","../../node_modules/sveltestrap/src/Input.svelte","../../node_modules/sveltestrap/src/Label.svelte","../../node_modules/sveltestrap/src/FormGroup.svelte","../../node_modules/sveltestrap/src/Pagination.svelte","../../node_modules/sveltestrap/src/PaginationItem.svelte","../../node_modules/sveltestrap/src/PaginationLink.svelte","../../src/front/sugarconsumeAPI/MyContentTable.svelte.html","../../src/front/imcAPI/imcTable.svelte.html","../../src/front/imcAPI/EditValue.svelte.html","../../src/front/sugarconsumeAPI/editResource.svelte.html","../../src/front/sugarconsumeAPI/MyGraph.svelte.html","../../src/front/App.svelte.html","../../src/front/index.js"],"sourcesContent":["function noop() { }\r\nconst identity = x => x;\r\nfunction assign(tar, src) {\r\n    // @ts-ignore\r\n    for (const k in src)\r\n        tar[k] = src[k];\r\n    return tar;\r\n}\r\nfunction is_promise(value) {\r\n    return value && typeof value === 'object' && typeof value.then === 'function';\r\n}\r\nfunction add_location(element, file, line, column, char) {\r\n    element.__svelte_meta = {\r\n        loc: { file, line, column, char }\r\n    };\r\n}\r\nfunction run(fn) {\r\n    return fn();\r\n}\r\nfunction blank_object() {\r\n    return Object.create(null);\r\n}\r\nfunction run_all(fns) {\r\n    fns.forEach(run);\r\n}\r\nfunction is_function(thing) {\r\n    return typeof thing === 'function';\r\n}\r\nfunction safe_not_equal(a, b) {\r\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\r\n}\r\nfunction not_equal(a, b) {\r\n    return a != a ? b == b : a !== b;\r\n}\r\nfunction validate_store(store, name) {\r\n    if (store != null && typeof store.subscribe !== 'function') {\r\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\r\n    }\r\n}\r\nfunction subscribe(store, ...callbacks) {\r\n    if (store == null) {\r\n        return noop;\r\n    }\r\n    const unsub = store.subscribe(...callbacks);\r\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\r\n}\r\nfunction get_store_value(store) {\r\n    let value;\r\n    subscribe(store, _ => value = _)();\r\n    return value;\r\n}\r\nfunction component_subscribe(component, store, callback) {\r\n    component.$$.on_destroy.push(subscribe(store, callback));\r\n}\r\nfunction create_slot(definition, ctx, $$scope, fn) {\r\n    if (definition) {\r\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\r\n        return definition[0](slot_ctx);\r\n    }\r\n}\r\nfunction get_slot_context(definition, ctx, $$scope, fn) {\r\n    return definition[1] && fn\r\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\r\n        : $$scope.ctx;\r\n}\r\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\r\n    if (definition[2] && fn) {\r\n        const lets = definition[2](fn(dirty));\r\n        if ($$scope.dirty === undefined) {\r\n            return lets;\r\n        }\r\n        if (typeof lets === 'object') {\r\n            const merged = [];\r\n            const len = Math.max($$scope.dirty.length, lets.length);\r\n            for (let i = 0; i < len; i += 1) {\r\n                merged[i] = $$scope.dirty[i] | lets[i];\r\n            }\r\n            return merged;\r\n        }\r\n        return $$scope.dirty | lets;\r\n    }\r\n    return $$scope.dirty;\r\n}\r\nfunction exclude_internal_props(props) {\r\n    const result = {};\r\n    for (const k in props)\r\n        if (k[0] !== '$')\r\n            result[k] = props[k];\r\n    return result;\r\n}\r\nfunction compute_rest_props(props, keys) {\r\n    const rest = {};\r\n    keys = new Set(keys);\r\n    for (const k in props)\r\n        if (!keys.has(k) && k[0] !== '$')\r\n            rest[k] = props[k];\r\n    return rest;\r\n}\r\nfunction once(fn) {\r\n    let ran = false;\r\n    return function (...args) {\r\n        if (ran)\r\n            return;\r\n        ran = true;\r\n        fn.call(this, ...args);\r\n    };\r\n}\r\nfunction null_to_empty(value) {\r\n    return value == null ? '' : value;\r\n}\r\nfunction set_store_value(store, ret, value = ret) {\r\n    store.set(value);\r\n    return ret;\r\n}\r\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\r\nfunction action_destroyer(action_result) {\r\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\r\n}\r\n\r\nconst is_client = typeof window !== 'undefined';\r\nlet now = is_client\r\n    ? () => window.performance.now()\r\n    : () => Date.now();\r\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\r\n// used internally for testing\r\nfunction set_now(fn) {\r\n    now = fn;\r\n}\r\nfunction set_raf(fn) {\r\n    raf = fn;\r\n}\r\n\r\nconst tasks = new Set();\r\nfunction run_tasks(now) {\r\n    tasks.forEach(task => {\r\n        if (!task.c(now)) {\r\n            tasks.delete(task);\r\n            task.f();\r\n        }\r\n    });\r\n    if (tasks.size !== 0)\r\n        raf(run_tasks);\r\n}\r\n/**\r\n * For testing purposes only!\r\n */\r\nfunction clear_loops() {\r\n    tasks.clear();\r\n}\r\n/**\r\n * Creates a new task that runs on each raf frame\r\n * until it returns a falsy value or is aborted\r\n */\r\nfunction loop(callback) {\r\n    let task;\r\n    if (tasks.size === 0)\r\n        raf(run_tasks);\r\n    return {\r\n        promise: new Promise(fulfill => {\r\n            tasks.add(task = { c: callback, f: fulfill });\r\n        }),\r\n        abort() {\r\n            tasks.delete(task);\r\n        }\r\n    };\r\n}\r\n\r\nfunction append(target, node) {\r\n    target.appendChild(node);\r\n}\r\nfunction insert(target, node, anchor) {\r\n    target.insertBefore(node, anchor || null);\r\n}\r\nfunction detach(node) {\r\n    node.parentNode.removeChild(node);\r\n}\r\nfunction destroy_each(iterations, detaching) {\r\n    for (let i = 0; i < iterations.length; i += 1) {\r\n        if (iterations[i])\r\n            iterations[i].d(detaching);\r\n    }\r\n}\r\nfunction element(name) {\r\n    return document.createElement(name);\r\n}\r\nfunction element_is(name, is) {\r\n    return document.createElement(name, { is });\r\n}\r\nfunction object_without_properties(obj, exclude) {\r\n    const target = {};\r\n    for (const k in obj) {\r\n        if (has_prop(obj, k)\r\n            // @ts-ignore\r\n            && exclude.indexOf(k) === -1) {\r\n            // @ts-ignore\r\n            target[k] = obj[k];\r\n        }\r\n    }\r\n    return target;\r\n}\r\nfunction svg_element(name) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\nfunction text(data) {\r\n    return document.createTextNode(data);\r\n}\r\nfunction space() {\r\n    return text(' ');\r\n}\r\nfunction empty() {\r\n    return text('');\r\n}\r\nfunction listen(node, event, handler, options) {\r\n    node.addEventListener(event, handler, options);\r\n    return () => node.removeEventListener(event, handler, options);\r\n}\r\nfunction prevent_default(fn) {\r\n    return function (event) {\r\n        event.preventDefault();\r\n        // @ts-ignore\r\n        return fn.call(this, event);\r\n    };\r\n}\r\nfunction stop_propagation(fn) {\r\n    return function (event) {\r\n        event.stopPropagation();\r\n        // @ts-ignore\r\n        return fn.call(this, event);\r\n    };\r\n}\r\nfunction self(fn) {\r\n    return function (event) {\r\n        // @ts-ignore\r\n        if (event.target === this)\r\n            fn.call(this, event);\r\n    };\r\n}\r\nfunction attr(node, attribute, value) {\r\n    if (value == null)\r\n        node.removeAttribute(attribute);\r\n    else if (node.getAttribute(attribute) !== value)\r\n        node.setAttribute(attribute, value);\r\n}\r\nfunction set_attributes(node, attributes) {\r\n    // @ts-ignore\r\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\r\n    for (const key in attributes) {\r\n        if (attributes[key] == null) {\r\n            node.removeAttribute(key);\r\n        }\r\n        else if (key === 'style') {\r\n            node.style.cssText = attributes[key];\r\n        }\r\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\r\n            node[key] = attributes[key];\r\n        }\r\n        else {\r\n            attr(node, key, attributes[key]);\r\n        }\r\n    }\r\n}\r\nfunction set_svg_attributes(node, attributes) {\r\n    for (const key in attributes) {\r\n        attr(node, key, attributes[key]);\r\n    }\r\n}\r\nfunction set_custom_element_data(node, prop, value) {\r\n    if (prop in node) {\r\n        node[prop] = value;\r\n    }\r\n    else {\r\n        attr(node, prop, value);\r\n    }\r\n}\r\nfunction xlink_attr(node, attribute, value) {\r\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\r\n}\r\nfunction get_binding_group_value(group) {\r\n    const value = [];\r\n    for (let i = 0; i < group.length; i += 1) {\r\n        if (group[i].checked)\r\n            value.push(group[i].__value);\r\n    }\r\n    return value;\r\n}\r\nfunction to_number(value) {\r\n    return value === '' ? undefined : +value;\r\n}\r\nfunction time_ranges_to_array(ranges) {\r\n    const array = [];\r\n    for (let i = 0; i < ranges.length; i += 1) {\r\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\r\n    }\r\n    return array;\r\n}\r\nfunction children(element) {\r\n    return Array.from(element.childNodes);\r\n}\r\nfunction claim_element(nodes, name, attributes, svg) {\r\n    for (let i = 0; i < nodes.length; i += 1) {\r\n        const node = nodes[i];\r\n        if (node.nodeName === name) {\r\n            let j = 0;\r\n            while (j < node.attributes.length) {\r\n                const attribute = node.attributes[j];\r\n                if (attributes[attribute.name]) {\r\n                    j++;\r\n                }\r\n                else {\r\n                    node.removeAttribute(attribute.name);\r\n                }\r\n            }\r\n            return nodes.splice(i, 1)[0];\r\n        }\r\n    }\r\n    return svg ? svg_element(name) : element(name);\r\n}\r\nfunction claim_text(nodes, data) {\r\n    for (let i = 0; i < nodes.length; i += 1) {\r\n        const node = nodes[i];\r\n        if (node.nodeType === 3) {\r\n            node.data = '' + data;\r\n            return nodes.splice(i, 1)[0];\r\n        }\r\n    }\r\n    return text(data);\r\n}\r\nfunction claim_space(nodes) {\r\n    return claim_text(nodes, ' ');\r\n}\r\nfunction set_data(text, data) {\r\n    data = '' + data;\r\n    if (text.data !== data)\r\n        text.data = data;\r\n}\r\nfunction set_input_value(input, value) {\r\n    if (value != null || input.value) {\r\n        input.value = value;\r\n    }\r\n}\r\nfunction set_input_type(input, type) {\r\n    try {\r\n        input.type = type;\r\n    }\r\n    catch (e) {\r\n        // do nothing\r\n    }\r\n}\r\nfunction set_style(node, key, value, important) {\r\n    node.style.setProperty(key, value, important ? 'important' : '');\r\n}\r\nfunction select_option(select, value) {\r\n    for (let i = 0; i < select.options.length; i += 1) {\r\n        const option = select.options[i];\r\n        if (option.__value === value) {\r\n            option.selected = true;\r\n            return;\r\n        }\r\n    }\r\n}\r\nfunction select_options(select, value) {\r\n    for (let i = 0; i < select.options.length; i += 1) {\r\n        const option = select.options[i];\r\n        option.selected = ~value.indexOf(option.__value);\r\n    }\r\n}\r\nfunction select_value(select) {\r\n    const selected_option = select.querySelector(':checked') || select.options[0];\r\n    return selected_option && selected_option.__value;\r\n}\r\nfunction select_multiple_value(select) {\r\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\r\n}\r\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\r\n// so we cache the result instead\r\nlet crossorigin;\r\nfunction is_crossorigin() {\r\n    if (crossorigin === undefined) {\r\n        crossorigin = false;\r\n        try {\r\n            if (typeof window !== 'undefined' && window.parent) {\r\n                void window.parent.document;\r\n            }\r\n        }\r\n        catch (error) {\r\n            crossorigin = true;\r\n        }\r\n    }\r\n    return crossorigin;\r\n}\r\nfunction add_resize_listener(node, fn) {\r\n    const computed_style = getComputedStyle(node);\r\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\r\n    if (computed_style.position === 'static') {\r\n        node.style.position = 'relative';\r\n    }\r\n    const iframe = element('iframe');\r\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\r\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\r\n    iframe.setAttribute('aria-hidden', 'true');\r\n    iframe.tabIndex = -1;\r\n    let unsubscribe;\r\n    if (is_crossorigin()) {\r\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\r\n        unsubscribe = listen(window, 'message', (event) => {\r\n            if (event.source === iframe.contentWindow)\r\n                fn();\r\n        });\r\n    }\r\n    else {\r\n        iframe.src = 'about:blank';\r\n        iframe.onload = () => {\r\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\r\n        };\r\n    }\r\n    append(node, iframe);\r\n    return () => {\r\n        detach(iframe);\r\n        if (unsubscribe)\r\n            unsubscribe();\r\n    };\r\n}\r\nfunction toggle_class(element, name, toggle) {\r\n    element.classList[toggle ? 'add' : 'remove'](name);\r\n}\r\nfunction custom_event(type, detail) {\r\n    const e = document.createEvent('CustomEvent');\r\n    e.initCustomEvent(type, false, false, detail);\r\n    return e;\r\n}\r\nfunction query_selector_all(selector, parent = document.body) {\r\n    return Array.from(parent.querySelectorAll(selector));\r\n}\r\nclass HtmlTag {\r\n    constructor(html, anchor = null) {\r\n        this.e = element('div');\r\n        this.a = anchor;\r\n        this.u(html);\r\n    }\r\n    m(target, anchor = null) {\r\n        for (let i = 0; i < this.n.length; i += 1) {\r\n            insert(target, this.n[i], anchor);\r\n        }\r\n        this.t = target;\r\n    }\r\n    u(html) {\r\n        this.e.innerHTML = html;\r\n        this.n = Array.from(this.e.childNodes);\r\n    }\r\n    p(html) {\r\n        this.d();\r\n        this.u(html);\r\n        this.m(this.t, this.a);\r\n    }\r\n    d() {\r\n        this.n.forEach(detach);\r\n    }\r\n}\r\n\r\nconst active_docs = new Set();\r\nlet active = 0;\r\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\r\nfunction hash(str) {\r\n    let hash = 5381;\r\n    let i = str.length;\r\n    while (i--)\r\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\r\n    return hash >>> 0;\r\n}\r\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\r\n    const step = 16.666 / duration;\r\n    let keyframes = '{\\n';\r\n    for (let p = 0; p <= 1; p += step) {\r\n        const t = a + (b - a) * ease(p);\r\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\r\n    }\r\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\r\n    const name = `__svelte_${hash(rule)}_${uid}`;\r\n    const doc = node.ownerDocument;\r\n    active_docs.add(doc);\r\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\r\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\r\n    if (!current_rules[name]) {\r\n        current_rules[name] = true;\r\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\r\n    }\r\n    const animation = node.style.animation || '';\r\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\r\n    active += 1;\r\n    return name;\r\n}\r\nfunction delete_rule(node, name) {\r\n    const previous = (node.style.animation || '').split(', ');\r\n    const next = previous.filter(name\r\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\r\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\r\n    );\r\n    const deleted = previous.length - next.length;\r\n    if (deleted) {\r\n        node.style.animation = next.join(', ');\r\n        active -= deleted;\r\n        if (!active)\r\n            clear_rules();\r\n    }\r\n}\r\nfunction clear_rules() {\r\n    raf(() => {\r\n        if (active)\r\n            return;\r\n        active_docs.forEach(doc => {\r\n            const stylesheet = doc.__svelte_stylesheet;\r\n            let i = stylesheet.cssRules.length;\r\n            while (i--)\r\n                stylesheet.deleteRule(i);\r\n            doc.__svelte_rules = {};\r\n        });\r\n        active_docs.clear();\r\n    });\r\n}\r\n\r\nfunction create_animation(node, from, fn, params) {\r\n    if (!from)\r\n        return noop;\r\n    const to = node.getBoundingClientRect();\r\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\r\n        return noop;\r\n    const { delay = 0, duration = 300, easing = identity, \r\n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\r\n    start: start_time = now() + delay, \r\n    // @ts-ignore todo:\r\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\r\n    let running = true;\r\n    let started = false;\r\n    let name;\r\n    function start() {\r\n        if (css) {\r\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\r\n        }\r\n        if (!delay) {\r\n            started = true;\r\n        }\r\n    }\r\n    function stop() {\r\n        if (css)\r\n            delete_rule(node, name);\r\n        running = false;\r\n    }\r\n    loop(now => {\r\n        if (!started && now >= start_time) {\r\n            started = true;\r\n        }\r\n        if (started && now >= end) {\r\n            tick(1, 0);\r\n            stop();\r\n        }\r\n        if (!running) {\r\n            return false;\r\n        }\r\n        if (started) {\r\n            const p = now - start_time;\r\n            const t = 0 + 1 * easing(p / duration);\r\n            tick(t, 1 - t);\r\n        }\r\n        return true;\r\n    });\r\n    start();\r\n    tick(0, 1);\r\n    return stop;\r\n}\r\nfunction fix_position(node) {\r\n    const style = getComputedStyle(node);\r\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\r\n        const { width, height } = style;\r\n        const a = node.getBoundingClientRect();\r\n        node.style.position = 'absolute';\r\n        node.style.width = width;\r\n        node.style.height = height;\r\n        add_transform(node, a);\r\n    }\r\n}\r\nfunction add_transform(node, a) {\r\n    const b = node.getBoundingClientRect();\r\n    if (a.left !== b.left || a.top !== b.top) {\r\n        const style = getComputedStyle(node);\r\n        const transform = style.transform === 'none' ? '' : style.transform;\r\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\r\n    }\r\n}\r\n\r\nlet current_component;\r\nfunction set_current_component(component) {\r\n    current_component = component;\r\n}\r\nfunction get_current_component() {\r\n    if (!current_component)\r\n        throw new Error(`Function called outside component initialization`);\r\n    return current_component;\r\n}\r\nfunction beforeUpdate(fn) {\r\n    get_current_component().$$.before_update.push(fn);\r\n}\r\nfunction onMount(fn) {\r\n    get_current_component().$$.on_mount.push(fn);\r\n}\r\nfunction afterUpdate(fn) {\r\n    get_current_component().$$.after_update.push(fn);\r\n}\r\nfunction onDestroy(fn) {\r\n    get_current_component().$$.on_destroy.push(fn);\r\n}\r\nfunction createEventDispatcher() {\r\n    const component = get_current_component();\r\n    return (type, detail) => {\r\n        const callbacks = component.$$.callbacks[type];\r\n        if (callbacks) {\r\n            // TODO are there situations where events could be dispatched\r\n            // in a server (non-DOM) environment?\r\n            const event = custom_event(type, detail);\r\n            callbacks.slice().forEach(fn => {\r\n                fn.call(component, event);\r\n            });\r\n        }\r\n    };\r\n}\r\nfunction setContext(key, context) {\r\n    get_current_component().$$.context.set(key, context);\r\n}\r\nfunction getContext(key) {\r\n    return get_current_component().$$.context.get(key);\r\n}\r\n// TODO figure out if we still want to support\r\n// shorthand events, or if we want to implement\r\n// a real bubbling mechanism\r\nfunction bubble(component, event) {\r\n    const callbacks = component.$$.callbacks[event.type];\r\n    if (callbacks) {\r\n        callbacks.slice().forEach(fn => fn(event));\r\n    }\r\n}\r\n\r\nconst dirty_components = [];\r\nconst intros = { enabled: false };\r\nconst binding_callbacks = [];\r\nconst render_callbacks = [];\r\nconst flush_callbacks = [];\r\nconst resolved_promise = Promise.resolve();\r\nlet update_scheduled = false;\r\nfunction schedule_update() {\r\n    if (!update_scheduled) {\r\n        update_scheduled = true;\r\n        resolved_promise.then(flush);\r\n    }\r\n}\r\nfunction tick() {\r\n    schedule_update();\r\n    return resolved_promise;\r\n}\r\nfunction add_render_callback(fn) {\r\n    render_callbacks.push(fn);\r\n}\r\nfunction add_flush_callback(fn) {\r\n    flush_callbacks.push(fn);\r\n}\r\nlet flushing = false;\r\nconst seen_callbacks = new Set();\r\nfunction flush() {\r\n    if (flushing)\r\n        return;\r\n    flushing = true;\r\n    do {\r\n        // first, call beforeUpdate functions\r\n        // and update components\r\n        for (let i = 0; i < dirty_components.length; i += 1) {\r\n            const component = dirty_components[i];\r\n            set_current_component(component);\r\n            update(component.$$);\r\n        }\r\n        dirty_components.length = 0;\r\n        while (binding_callbacks.length)\r\n            binding_callbacks.pop()();\r\n        // then, once components are updated, call\r\n        // afterUpdate functions. This may cause\r\n        // subsequent updates...\r\n        for (let i = 0; i < render_callbacks.length; i += 1) {\r\n            const callback = render_callbacks[i];\r\n            if (!seen_callbacks.has(callback)) {\r\n                // ...so guard against infinite loops\r\n                seen_callbacks.add(callback);\r\n                callback();\r\n            }\r\n        }\r\n        render_callbacks.length = 0;\r\n    } while (dirty_components.length);\r\n    while (flush_callbacks.length) {\r\n        flush_callbacks.pop()();\r\n    }\r\n    update_scheduled = false;\r\n    flushing = false;\r\n    seen_callbacks.clear();\r\n}\r\nfunction update($$) {\r\n    if ($$.fragment !== null) {\r\n        $$.update();\r\n        run_all($$.before_update);\r\n        const dirty = $$.dirty;\r\n        $$.dirty = [-1];\r\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\r\n        $$.after_update.forEach(add_render_callback);\r\n    }\r\n}\r\n\r\nlet promise;\r\nfunction wait() {\r\n    if (!promise) {\r\n        promise = Promise.resolve();\r\n        promise.then(() => {\r\n            promise = null;\r\n        });\r\n    }\r\n    return promise;\r\n}\r\nfunction dispatch(node, direction, kind) {\r\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\r\n}\r\nconst outroing = new Set();\r\nlet outros;\r\nfunction group_outros() {\r\n    outros = {\r\n        r: 0,\r\n        c: [],\r\n        p: outros // parent group\r\n    };\r\n}\r\nfunction check_outros() {\r\n    if (!outros.r) {\r\n        run_all(outros.c);\r\n    }\r\n    outros = outros.p;\r\n}\r\nfunction transition_in(block, local) {\r\n    if (block && block.i) {\r\n        outroing.delete(block);\r\n        block.i(local);\r\n    }\r\n}\r\nfunction transition_out(block, local, detach, callback) {\r\n    if (block && block.o) {\r\n        if (outroing.has(block))\r\n            return;\r\n        outroing.add(block);\r\n        outros.c.push(() => {\r\n            outroing.delete(block);\r\n            if (callback) {\r\n                if (detach)\r\n                    block.d(1);\r\n                callback();\r\n            }\r\n        });\r\n        block.o(local);\r\n    }\r\n}\r\nconst null_transition = { duration: 0 };\r\nfunction create_in_transition(node, fn, params) {\r\n    let config = fn(node, params);\r\n    let running = false;\r\n    let animation_name;\r\n    let task;\r\n    let uid = 0;\r\n    function cleanup() {\r\n        if (animation_name)\r\n            delete_rule(node, animation_name);\r\n    }\r\n    function go() {\r\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\r\n        if (css)\r\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\r\n        tick(0, 1);\r\n        const start_time = now() + delay;\r\n        const end_time = start_time + duration;\r\n        if (task)\r\n            task.abort();\r\n        running = true;\r\n        add_render_callback(() => dispatch(node, true, 'start'));\r\n        task = loop(now => {\r\n            if (running) {\r\n                if (now >= end_time) {\r\n                    tick(1, 0);\r\n                    dispatch(node, true, 'end');\r\n                    cleanup();\r\n                    return running = false;\r\n                }\r\n                if (now >= start_time) {\r\n                    const t = easing((now - start_time) / duration);\r\n                    tick(t, 1 - t);\r\n                }\r\n            }\r\n            return running;\r\n        });\r\n    }\r\n    let started = false;\r\n    return {\r\n        start() {\r\n            if (started)\r\n                return;\r\n            delete_rule(node);\r\n            if (is_function(config)) {\r\n                config = config();\r\n                wait().then(go);\r\n            }\r\n            else {\r\n                go();\r\n            }\r\n        },\r\n        invalidate() {\r\n            started = false;\r\n        },\r\n        end() {\r\n            if (running) {\r\n                cleanup();\r\n                running = false;\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction create_out_transition(node, fn, params) {\r\n    let config = fn(node, params);\r\n    let running = true;\r\n    let animation_name;\r\n    const group = outros;\r\n    group.r += 1;\r\n    function go() {\r\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\r\n        if (css)\r\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\r\n        const start_time = now() + delay;\r\n        const end_time = start_time + duration;\r\n        add_render_callback(() => dispatch(node, false, 'start'));\r\n        loop(now => {\r\n            if (running) {\r\n                if (now >= end_time) {\r\n                    tick(0, 1);\r\n                    dispatch(node, false, 'end');\r\n                    if (!--group.r) {\r\n                        // this will result in `end()` being called,\r\n                        // so we don't need to clean up here\r\n                        run_all(group.c);\r\n                    }\r\n                    return false;\r\n                }\r\n                if (now >= start_time) {\r\n                    const t = easing((now - start_time) / duration);\r\n                    tick(1 - t, t);\r\n                }\r\n            }\r\n            return running;\r\n        });\r\n    }\r\n    if (is_function(config)) {\r\n        wait().then(() => {\r\n            // @ts-ignore\r\n            config = config();\r\n            go();\r\n        });\r\n    }\r\n    else {\r\n        go();\r\n    }\r\n    return {\r\n        end(reset) {\r\n            if (reset && config.tick) {\r\n                config.tick(1, 0);\r\n            }\r\n            if (running) {\r\n                if (animation_name)\r\n                    delete_rule(node, animation_name);\r\n                running = false;\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction create_bidirectional_transition(node, fn, params, intro) {\r\n    let config = fn(node, params);\r\n    let t = intro ? 0 : 1;\r\n    let running_program = null;\r\n    let pending_program = null;\r\n    let animation_name = null;\r\n    function clear_animation() {\r\n        if (animation_name)\r\n            delete_rule(node, animation_name);\r\n    }\r\n    function init(program, duration) {\r\n        const d = program.b - t;\r\n        duration *= Math.abs(d);\r\n        return {\r\n            a: t,\r\n            b: program.b,\r\n            d,\r\n            duration,\r\n            start: program.start,\r\n            end: program.start + duration,\r\n            group: program.group\r\n        };\r\n    }\r\n    function go(b) {\r\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\r\n        const program = {\r\n            start: now() + delay,\r\n            b\r\n        };\r\n        if (!b) {\r\n            // @ts-ignore todo: improve typings\r\n            program.group = outros;\r\n            outros.r += 1;\r\n        }\r\n        if (running_program) {\r\n            pending_program = program;\r\n        }\r\n        else {\r\n            // if this is an intro, and there's a delay, we need to do\r\n            // an initial tick and/or apply CSS animation immediately\r\n            if (css) {\r\n                clear_animation();\r\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\r\n            }\r\n            if (b)\r\n                tick(0, 1);\r\n            running_program = init(program, duration);\r\n            add_render_callback(() => dispatch(node, b, 'start'));\r\n            loop(now => {\r\n                if (pending_program && now > pending_program.start) {\r\n                    running_program = init(pending_program, duration);\r\n                    pending_program = null;\r\n                    dispatch(node, running_program.b, 'start');\r\n                    if (css) {\r\n                        clear_animation();\r\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\r\n                    }\r\n                }\r\n                if (running_program) {\r\n                    if (now >= running_program.end) {\r\n                        tick(t = running_program.b, 1 - t);\r\n                        dispatch(node, running_program.b, 'end');\r\n                        if (!pending_program) {\r\n                            // we're done\r\n                            if (running_program.b) {\r\n                                // intro — we can tidy up immediately\r\n                                clear_animation();\r\n                            }\r\n                            else {\r\n                                // outro — needs to be coordinated\r\n                                if (!--running_program.group.r)\r\n                                    run_all(running_program.group.c);\r\n                            }\r\n                        }\r\n                        running_program = null;\r\n                    }\r\n                    else if (now >= running_program.start) {\r\n                        const p = now - running_program.start;\r\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\r\n                        tick(t, 1 - t);\r\n                    }\r\n                }\r\n                return !!(running_program || pending_program);\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        run(b) {\r\n            if (is_function(config)) {\r\n                wait().then(() => {\r\n                    // @ts-ignore\r\n                    config = config();\r\n                    go(b);\r\n                });\r\n            }\r\n            else {\r\n                go(b);\r\n            }\r\n        },\r\n        end() {\r\n            clear_animation();\r\n            running_program = pending_program = null;\r\n        }\r\n    };\r\n}\r\n\r\nfunction handle_promise(promise, info) {\r\n    const token = info.token = {};\r\n    function update(type, index, key, value) {\r\n        if (info.token !== token)\r\n            return;\r\n        info.resolved = value;\r\n        let child_ctx = info.ctx;\r\n        if (key !== undefined) {\r\n            child_ctx = child_ctx.slice();\r\n            child_ctx[key] = value;\r\n        }\r\n        const block = type && (info.current = type)(child_ctx);\r\n        let needs_flush = false;\r\n        if (info.block) {\r\n            if (info.blocks) {\r\n                info.blocks.forEach((block, i) => {\r\n                    if (i !== index && block) {\r\n                        group_outros();\r\n                        transition_out(block, 1, 1, () => {\r\n                            info.blocks[i] = null;\r\n                        });\r\n                        check_outros();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                info.block.d(1);\r\n            }\r\n            block.c();\r\n            transition_in(block, 1);\r\n            block.m(info.mount(), info.anchor);\r\n            needs_flush = true;\r\n        }\r\n        info.block = block;\r\n        if (info.blocks)\r\n            info.blocks[index] = block;\r\n        if (needs_flush) {\r\n            flush();\r\n        }\r\n    }\r\n    if (is_promise(promise)) {\r\n        const current_component = get_current_component();\r\n        promise.then(value => {\r\n            set_current_component(current_component);\r\n            update(info.then, 1, info.value, value);\r\n            set_current_component(null);\r\n        }, error => {\r\n            set_current_component(current_component);\r\n            update(info.catch, 2, info.error, error);\r\n            set_current_component(null);\r\n        });\r\n        // if we previously had a then/catch block, destroy it\r\n        if (info.current !== info.pending) {\r\n            update(info.pending, 0);\r\n            return true;\r\n        }\r\n    }\r\n    else {\r\n        if (info.current !== info.then) {\r\n            update(info.then, 1, info.value, promise);\r\n            return true;\r\n        }\r\n        info.resolved = promise;\r\n    }\r\n}\r\n\r\nconst globals = (typeof window !== 'undefined'\r\n    ? window\r\n    : typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : global);\r\n\r\nfunction destroy_block(block, lookup) {\r\n    block.d(1);\r\n    lookup.delete(block.key);\r\n}\r\nfunction outro_and_destroy_block(block, lookup) {\r\n    transition_out(block, 1, 1, () => {\r\n        lookup.delete(block.key);\r\n    });\r\n}\r\nfunction fix_and_destroy_block(block, lookup) {\r\n    block.f();\r\n    destroy_block(block, lookup);\r\n}\r\nfunction fix_and_outro_and_destroy_block(block, lookup) {\r\n    block.f();\r\n    outro_and_destroy_block(block, lookup);\r\n}\r\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\r\n    let o = old_blocks.length;\r\n    let n = list.length;\r\n    let i = o;\r\n    const old_indexes = {};\r\n    while (i--)\r\n        old_indexes[old_blocks[i].key] = i;\r\n    const new_blocks = [];\r\n    const new_lookup = new Map();\r\n    const deltas = new Map();\r\n    i = n;\r\n    while (i--) {\r\n        const child_ctx = get_context(ctx, list, i);\r\n        const key = get_key(child_ctx);\r\n        let block = lookup.get(key);\r\n        if (!block) {\r\n            block = create_each_block(key, child_ctx);\r\n            block.c();\r\n        }\r\n        else if (dynamic) {\r\n            block.p(child_ctx, dirty);\r\n        }\r\n        new_lookup.set(key, new_blocks[i] = block);\r\n        if (key in old_indexes)\r\n            deltas.set(key, Math.abs(i - old_indexes[key]));\r\n    }\r\n    const will_move = new Set();\r\n    const did_move = new Set();\r\n    function insert(block) {\r\n        transition_in(block, 1);\r\n        block.m(node, next, lookup.has(block.key));\r\n        lookup.set(block.key, block);\r\n        next = block.first;\r\n        n--;\r\n    }\r\n    while (o && n) {\r\n        const new_block = new_blocks[n - 1];\r\n        const old_block = old_blocks[o - 1];\r\n        const new_key = new_block.key;\r\n        const old_key = old_block.key;\r\n        if (new_block === old_block) {\r\n            // do nothing\r\n            next = new_block.first;\r\n            o--;\r\n            n--;\r\n        }\r\n        else if (!new_lookup.has(old_key)) {\r\n            // remove old block\r\n            destroy(old_block, lookup);\r\n            o--;\r\n        }\r\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\r\n            insert(new_block);\r\n        }\r\n        else if (did_move.has(old_key)) {\r\n            o--;\r\n        }\r\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\r\n            did_move.add(new_key);\r\n            insert(new_block);\r\n        }\r\n        else {\r\n            will_move.add(old_key);\r\n            o--;\r\n        }\r\n    }\r\n    while (o--) {\r\n        const old_block = old_blocks[o];\r\n        if (!new_lookup.has(old_block.key))\r\n            destroy(old_block, lookup);\r\n    }\r\n    while (n)\r\n        insert(new_blocks[n - 1]);\r\n    return new_blocks;\r\n}\r\nfunction validate_each_keys(ctx, list, get_context, get_key) {\r\n    const keys = new Set();\r\n    for (let i = 0; i < list.length; i++) {\r\n        const key = get_key(get_context(ctx, list, i));\r\n        if (keys.has(key)) {\r\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\r\n        }\r\n        keys.add(key);\r\n    }\r\n}\r\n\r\nfunction get_spread_update(levels, updates) {\r\n    const update = {};\r\n    const to_null_out = {};\r\n    const accounted_for = { $$scope: 1 };\r\n    let i = levels.length;\r\n    while (i--) {\r\n        const o = levels[i];\r\n        const n = updates[i];\r\n        if (n) {\r\n            for (const key in o) {\r\n                if (!(key in n))\r\n                    to_null_out[key] = 1;\r\n            }\r\n            for (const key in n) {\r\n                if (!accounted_for[key]) {\r\n                    update[key] = n[key];\r\n                    accounted_for[key] = 1;\r\n                }\r\n            }\r\n            levels[i] = n;\r\n        }\r\n        else {\r\n            for (const key in o) {\r\n                accounted_for[key] = 1;\r\n            }\r\n        }\r\n    }\r\n    for (const key in to_null_out) {\r\n        if (!(key in update))\r\n            update[key] = undefined;\r\n    }\r\n    return update;\r\n}\r\nfunction get_spread_object(spread_props) {\r\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\r\n}\r\n\r\n// source: https://html.spec.whatwg.org/multipage/indices.html\r\nconst boolean_attributes = new Set([\r\n    'allowfullscreen',\r\n    'allowpaymentrequest',\r\n    'async',\r\n    'autofocus',\r\n    'autoplay',\r\n    'checked',\r\n    'controls',\r\n    'default',\r\n    'defer',\r\n    'disabled',\r\n    'formnovalidate',\r\n    'hidden',\r\n    'ismap',\r\n    'loop',\r\n    'multiple',\r\n    'muted',\r\n    'nomodule',\r\n    'novalidate',\r\n    'open',\r\n    'playsinline',\r\n    'readonly',\r\n    'required',\r\n    'reversed',\r\n    'selected'\r\n]);\r\n\r\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\r\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\r\n// https://infra.spec.whatwg.org/#noncharacter\r\nfunction spread(args, classes_to_add) {\r\n    const attributes = Object.assign({}, ...args);\r\n    if (classes_to_add) {\r\n        if (attributes.class == null) {\r\n            attributes.class = classes_to_add;\r\n        }\r\n        else {\r\n            attributes.class += ' ' + classes_to_add;\r\n        }\r\n    }\r\n    let str = '';\r\n    Object.keys(attributes).forEach(name => {\r\n        if (invalid_attribute_name_character.test(name))\r\n            return;\r\n        const value = attributes[name];\r\n        if (value === true)\r\n            str += \" \" + name;\r\n        else if (boolean_attributes.has(name.toLowerCase())) {\r\n            if (value)\r\n                str += \" \" + name;\r\n        }\r\n        else if (value != null) {\r\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\r\n        }\r\n    });\r\n    return str;\r\n}\r\nconst escaped = {\r\n    '\"': '&quot;',\r\n    \"'\": '&#39;',\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;'\r\n};\r\nfunction escape(html) {\r\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\r\n}\r\nfunction each(items, fn) {\r\n    let str = '';\r\n    for (let i = 0; i < items.length; i += 1) {\r\n        str += fn(items[i], i);\r\n    }\r\n    return str;\r\n}\r\nconst missing_component = {\r\n    $$render: () => ''\r\n};\r\nfunction validate_component(component, name) {\r\n    if (!component || !component.$$render) {\r\n        if (name === 'svelte:component')\r\n            name += ' this={...}';\r\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\r\n    }\r\n    return component;\r\n}\r\nfunction debug(file, line, column, values) {\r\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\r\n    console.log(values); // eslint-disable-line no-console\r\n    return '';\r\n}\r\nlet on_destroy;\r\nfunction create_ssr_component(fn) {\r\n    function $$render(result, props, bindings, slots) {\r\n        const parent_component = current_component;\r\n        const $$ = {\r\n            on_destroy,\r\n            context: new Map(parent_component ? parent_component.$$.context : []),\r\n            // these will be immediately discarded\r\n            on_mount: [],\r\n            before_update: [],\r\n            after_update: [],\r\n            callbacks: blank_object()\r\n        };\r\n        set_current_component({ $$ });\r\n        const html = fn(result, props, bindings, slots);\r\n        set_current_component(parent_component);\r\n        return html;\r\n    }\r\n    return {\r\n        render: (props = {}, options = {}) => {\r\n            on_destroy = [];\r\n            const result = { title: '', head: '', css: new Set() };\r\n            const html = $$render(result, props, {}, options);\r\n            run_all(on_destroy);\r\n            return {\r\n                html,\r\n                css: {\r\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\r\n                    map: null // TODO\r\n                },\r\n                head: result.title + result.head\r\n            };\r\n        },\r\n        $$render\r\n    };\r\n}\r\nfunction add_attribute(name, value, boolean) {\r\n    if (value == null || (boolean && !value))\r\n        return '';\r\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\r\n}\r\nfunction add_classes(classes) {\r\n    return classes ? ` class=\"${classes}\"` : ``;\r\n}\r\n\r\nfunction bind(component, name, callback) {\r\n    const index = component.$$.props[name];\r\n    if (index !== undefined) {\r\n        component.$$.bound[index] = callback;\r\n        callback(component.$$.ctx[index]);\r\n    }\r\n}\r\nfunction create_component(block) {\r\n    block && block.c();\r\n}\r\nfunction claim_component(block, parent_nodes) {\r\n    block && block.l(parent_nodes);\r\n}\r\nfunction mount_component(component, target, anchor) {\r\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\r\n    fragment && fragment.m(target, anchor);\r\n    // onMount happens before the initial afterUpdate\r\n    add_render_callback(() => {\r\n        const new_on_destroy = on_mount.map(run).filter(is_function);\r\n        if (on_destroy) {\r\n            on_destroy.push(...new_on_destroy);\r\n        }\r\n        else {\r\n            // Edge case - component was destroyed immediately,\r\n            // most likely as a result of a binding initialising\r\n            run_all(new_on_destroy);\r\n        }\r\n        component.$$.on_mount = [];\r\n    });\r\n    after_update.forEach(add_render_callback);\r\n}\r\nfunction destroy_component(component, detaching) {\r\n    const $$ = component.$$;\r\n    if ($$.fragment !== null) {\r\n        run_all($$.on_destroy);\r\n        $$.fragment && $$.fragment.d(detaching);\r\n        // TODO null out other refs, including component.$$ (but need to\r\n        // preserve final state?)\r\n        $$.on_destroy = $$.fragment = null;\r\n        $$.ctx = [];\r\n    }\r\n}\r\nfunction make_dirty(component, i) {\r\n    if (component.$$.dirty[0] === -1) {\r\n        dirty_components.push(component);\r\n        schedule_update();\r\n        component.$$.dirty.fill(0);\r\n    }\r\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\r\n}\r\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\r\n    const parent_component = current_component;\r\n    set_current_component(component);\r\n    const prop_values = options.props || {};\r\n    const $$ = component.$$ = {\r\n        fragment: null,\r\n        ctx: null,\r\n        // state\r\n        props,\r\n        update: noop,\r\n        not_equal,\r\n        bound: blank_object(),\r\n        // lifecycle\r\n        on_mount: [],\r\n        on_destroy: [],\r\n        before_update: [],\r\n        after_update: [],\r\n        context: new Map(parent_component ? parent_component.$$.context : []),\r\n        // everything else\r\n        callbacks: blank_object(),\r\n        dirty\r\n    };\r\n    let ready = false;\r\n    $$.ctx = instance\r\n        ? instance(component, prop_values, (i, ret, ...rest) => {\r\n            const value = rest.length ? rest[0] : ret;\r\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\r\n                if ($$.bound[i])\r\n                    $$.bound[i](value);\r\n                if (ready)\r\n                    make_dirty(component, i);\r\n            }\r\n            return ret;\r\n        })\r\n        : [];\r\n    $$.update();\r\n    ready = true;\r\n    run_all($$.before_update);\r\n    // `false` as a special case of no DOM component\r\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\r\n    if (options.target) {\r\n        if (options.hydrate) {\r\n            const nodes = children(options.target);\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            $$.fragment && $$.fragment.l(nodes);\r\n            nodes.forEach(detach);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            $$.fragment && $$.fragment.c();\r\n        }\r\n        if (options.intro)\r\n            transition_in(component.$$.fragment);\r\n        mount_component(component, options.target, options.anchor);\r\n        flush();\r\n    }\r\n    set_current_component(parent_component);\r\n}\r\nlet SvelteElement;\r\nif (typeof HTMLElement === 'function') {\r\n    SvelteElement = class extends HTMLElement {\r\n        constructor() {\r\n            super();\r\n            this.attachShadow({ mode: 'open' });\r\n        }\r\n        connectedCallback() {\r\n            // @ts-ignore todo: improve typings\r\n            for (const key in this.$$.slotted) {\r\n                // @ts-ignore todo: improve typings\r\n                this.appendChild(this.$$.slotted[key]);\r\n            }\r\n        }\r\n        attributeChangedCallback(attr, _oldValue, newValue) {\r\n            this[attr] = newValue;\r\n        }\r\n        $destroy() {\r\n            destroy_component(this, 1);\r\n            this.$destroy = noop;\r\n        }\r\n        $on(type, callback) {\r\n            // TODO should this delegate to addEventListener?\r\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\r\n            callbacks.push(callback);\r\n            return () => {\r\n                const index = callbacks.indexOf(callback);\r\n                if (index !== -1)\r\n                    callbacks.splice(index, 1);\r\n            };\r\n        }\r\n        $set() {\r\n            // overridden by instance, if it has props\r\n        }\r\n    };\r\n}\r\nclass SvelteComponent {\r\n    $destroy() {\r\n        destroy_component(this, 1);\r\n        this.$destroy = noop;\r\n    }\r\n    $on(type, callback) {\r\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\r\n        callbacks.push(callback);\r\n        return () => {\r\n            const index = callbacks.indexOf(callback);\r\n            if (index !== -1)\r\n                callbacks.splice(index, 1);\r\n        };\r\n    }\r\n    $set() {\r\n        // overridden by instance, if it has props\r\n    }\r\n}\r\n\r\nfunction dispatch_dev(type, detail) {\r\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.21.0' }, detail)));\r\n}\r\nfunction append_dev(target, node) {\r\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\r\n    append(target, node);\r\n}\r\nfunction insert_dev(target, node, anchor) {\r\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\r\n    insert(target, node, anchor);\r\n}\r\nfunction detach_dev(node) {\r\n    dispatch_dev(\"SvelteDOMRemove\", { node });\r\n    detach(node);\r\n}\r\nfunction detach_between_dev(before, after) {\r\n    while (before.nextSibling && before.nextSibling !== after) {\r\n        detach_dev(before.nextSibling);\r\n    }\r\n}\r\nfunction detach_before_dev(after) {\r\n    while (after.previousSibling) {\r\n        detach_dev(after.previousSibling);\r\n    }\r\n}\r\nfunction detach_after_dev(before) {\r\n    while (before.nextSibling) {\r\n        detach_dev(before.nextSibling);\r\n    }\r\n}\r\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\r\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\r\n    if (has_prevent_default)\r\n        modifiers.push('preventDefault');\r\n    if (has_stop_propagation)\r\n        modifiers.push('stopPropagation');\r\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\r\n    const dispose = listen(node, event, handler, options);\r\n    return () => {\r\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\r\n        dispose();\r\n    };\r\n}\r\nfunction attr_dev(node, attribute, value) {\r\n    attr(node, attribute, value);\r\n    if (value == null)\r\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\r\n    else\r\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\r\n}\r\nfunction prop_dev(node, property, value) {\r\n    node[property] = value;\r\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\r\n}\r\nfunction dataset_dev(node, property, value) {\r\n    node.dataset[property] = value;\r\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\r\n}\r\nfunction set_data_dev(text, data) {\r\n    data = '' + data;\r\n    if (text.data === data)\r\n        return;\r\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\r\n    text.data = data;\r\n}\r\nfunction validate_each_argument(arg) {\r\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\r\n        let msg = '{#each} only iterates over array-like objects.';\r\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\r\n            msg += ' You can use a spread to convert this iterable into an array.';\r\n        }\r\n        throw new Error(msg);\r\n    }\r\n}\r\nfunction validate_slots(name, slot, keys) {\r\n    for (const slot_key of Object.keys(slot)) {\r\n        if (!~keys.indexOf(slot_key)) {\r\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\r\n        }\r\n    }\r\n}\r\nclass SvelteComponentDev extends SvelteComponent {\r\n    constructor(options) {\r\n        if (!options || (!options.target && !options.$$inline)) {\r\n            throw new Error(`'target' is a required option`);\r\n        }\r\n        super();\r\n    }\r\n    $destroy() {\r\n        super.$destroy();\r\n        this.$destroy = () => {\r\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\r\n        };\r\n    }\r\n    $capture_state() { }\r\n    $inject_state() { }\r\n}\r\nfunction loop_guard(timeout) {\r\n    const start = Date.now();\r\n    return () => {\r\n        if (Date.now() - start > timeout) {\r\n            throw new Error(`Infinite loop detected`);\r\n        }\r\n    };\r\n}\r\n\r\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\r\nexport { get_store_value as get } from '../internal';\r\n\r\nconst subscriber_queue = [];\r\n/**\r\n * Creates a `Readable` store that allows reading by subscription.\r\n * @param value initial value\r\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\r\n */\r\nfunction readable(value, start) {\r\n    return {\r\n        subscribe: writable(value, start).subscribe,\r\n    };\r\n}\r\n/**\r\n * Create a `Writable` store that allows both updating and reading by subscription.\r\n * @param {*=}value initial value\r\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\r\n */\r\nfunction writable(value, start = noop) {\r\n    let stop;\r\n    const subscribers = [];\r\n    function set(new_value) {\r\n        if (safe_not_equal(value, new_value)) {\r\n            value = new_value;\r\n            if (stop) { // store is ready\r\n                const run_queue = !subscriber_queue.length;\r\n                for (let i = 0; i < subscribers.length; i += 1) {\r\n                    const s = subscribers[i];\r\n                    s[1]();\r\n                    subscriber_queue.push(s, value);\r\n                }\r\n                if (run_queue) {\r\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\r\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\r\n                    }\r\n                    subscriber_queue.length = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function update(fn) {\r\n        set(fn(value));\r\n    }\r\n    function subscribe(run, invalidate = noop) {\r\n        const subscriber = [run, invalidate];\r\n        subscribers.push(subscriber);\r\n        if (subscribers.length === 1) {\r\n            stop = start(set) || noop;\r\n        }\r\n        run(value);\r\n        return () => {\r\n            const index = subscribers.indexOf(subscriber);\r\n            if (index !== -1) {\r\n                subscribers.splice(index, 1);\r\n            }\r\n            if (subscribers.length === 0) {\r\n                stop();\r\n                stop = null;\r\n            }\r\n        };\r\n    }\r\n    return { set, update, subscribe };\r\n}\r\nfunction derived(stores, fn, initial_value) {\r\n    const single = !Array.isArray(stores);\r\n    const stores_array = single\r\n        ? [stores]\r\n        : stores;\r\n    const auto = fn.length < 2;\r\n    return readable(initial_value, (set) => {\r\n        let inited = false;\r\n        const values = [];\r\n        let pending = 0;\r\n        let cleanup = noop;\r\n        const sync = () => {\r\n            if (pending) {\r\n                return;\r\n            }\r\n            cleanup();\r\n            const result = fn(single ? values[0] : values, set);\r\n            if (auto) {\r\n                set(result);\r\n            }\r\n            else {\r\n                cleanup = is_function(result) ? result : noop;\r\n            }\r\n        };\r\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\r\n            values[i] = value;\r\n            pending &= ~(1 << i);\r\n            if (inited) {\r\n                sync();\r\n            }\r\n        }, () => {\r\n            pending |= (1 << i);\r\n        }));\r\n        inited = true;\r\n        sync();\r\n        return function stop() {\r\n            run_all(unsubscribers);\r\n            cleanup();\r\n        };\r\n    });\r\n}\r\n\r\nexport { derived, readable, writable };\r\n","<script context=\"module\">\n// Something's wrong with eslint on this file\n/* eslint-disable no-multiple-empty-lines */\n\nimport {readable, derived} from 'svelte/store'\n\n/**\n * Wraps a route to add route pre-conditions.\n * \n * @param {SvelteComponent} route - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...Function} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {Object} Wrapped route\n */\nexport function wrap(route, userData, ...conditions) {\n    // Check if we don't have userData\n    if (userData && typeof userData == 'function') {\n        conditions = (conditions && conditions.length) ? conditions : []\n        conditions.unshift(userData)\n        userData = undefined\n    }\n\n    // Parameter route and each item of conditions must be functions\n    if (!route || typeof route != 'function') {\n        throw Error('Invalid parameter route')\n    }\n    if (conditions && conditions.length) {\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i] || typeof conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Returns an object that contains all the functions to execute too\n    const obj = {route, userData}\n    if (conditions && conditions.length) {\n        obj.conditions = conditions\n    }\n\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    Object.defineProperty(obj, '_sveltesparouter', {\n        value: true\n    })\n\n    return obj\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    getLocation(),\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return nextTickPromise(() => {\n        window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n    })\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function pop() {\n    // Execute this code when the current call stack is complete\n    return nextTickPromise(() => {\n        window.history.back()\n    })\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise} Promise that resolves after the page navigation has completed\n */\nexport function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    return nextTickPromise(() => {\n        const dest = (location.charAt(0) == '#' ? '' : '#') + location\n        try {\n            window.history.replaceState(undefined, undefined, dest)\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n        }\n\n        // The method above doesn't trigger the hashchange event, so let's do that manually\n        window.dispatchEvent(new Event('hashchange'))\n    })\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n */\nexport function link(node) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    // Destination must start with '/'\n    const href = node.getAttribute('href')\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute')\n    }\n\n    // Add # to every href attribute\n    node.setAttribute('href', '#' + href)\n}\n\n/**\n * Performs a callback in the next tick and returns a Promise that resolves once that's done\n * \n * @param {Function} cb - Callback to invoke\n * @returns {Promise} Promise that resolves after the callback has been invoked, with the return value of the callback (if any)\n */\nexport function nextTickPromise(cb) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(cb())\n        }, 0)\n    })\n}\n</script>\n\n{#if componentParams}\n  <svelte:component this=\"{component}\" params=\"{componentParams}\" on:routeEvent />\n{:else}\n  <svelte:component this=\"{component}\" on:routeEvent />\n{/if}\n\n<script>\nimport {createEventDispatcher} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent} component - Svelte component for the route\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.route\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n        }\n        else {\n            this.component = component\n            this.conditions = []\n            this.userData = undefined\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix && path.startsWith(prefix)) {\n            path = path.substr(prefix.length) || '/'\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            out[this._keys[i]] = matches[++i] || null\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {SvelteComponent} component - Svelte component\n     * @property {string} name - Name of the Svelte component\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!this.conditions[i](detail)) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nconst dispatchNextTick = (name, detail) => {\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        dispatch(name, detail)\n    }, 0)\n}\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n$: {\n    // Find a route matching the location\n    component = null\n    let i = 0\n    while (!component && i < routesList.length) {\n        const match = routesList[i].match($loc.location)\n        if (match) {\n            const detail = {\n                component: routesList[i].component,\n                name: routesList[i].component.name,\n                location: $loc.location,\n                querystring: $loc.querystring,\n                userData: routesList[i].userData\n            }\n\n            // Check if the route can be loaded - if all conditions succeed\n            if (!routesList[i].checkConditions(detail)) {\n                // Trigger an event to notify the user\n                dispatchNextTick('conditionsFailed', detail)\n                break\n            }\n            component = routesList[i].component\n            // Set componentParams onloy if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n            // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n            if (match && typeof match == 'object' && Object.keys(match).length) {\n                componentParams = match\n            }\n            else {\n                componentParams = null\n            }\n\n            dispatchNextTick('routeLoaded', detail)\n        }\n        i++\n    }\n}\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","function toVal(mix) {\n\tvar k, y, str='';\n\tif (mix) {\n\t\tif (typeof mix === 'object') {\n\t\t\tif (Array.isArray(mix)) {\n\t\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\t\tif (mix[k] && (y = toVal(mix[k]))) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (k in mix) {\n\t\t\t\t\tif (mix[k] && (y = toVal(k))) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof mix !== 'boolean' && !mix.call) {\n\t\t\tstr && (str += ' ');\n\t\t\tstr += mix;\n\t\t}\n\t}\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (x = toVal(arguments[i++])) {\n\t\t\tstr && (str += ' ');\n\t\t\tstr += x\n\t\t}\n\t}\n\treturn str;\n}\n","export function getOriginalBodyPadding() {\n  const style = window ? window.getComputedStyle(document.body, null) : {};\n\n  return parseInt((style && style.getPropertyValue('padding-right')) || 0, 10);\n}\n\nexport function getScrollbarWidth() {\n  let scrollDiv = document.createElement('div');\n  // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\n\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? `${padding}px` : null;\n}\n\nexport function isBodyOverflowing() {\n  return window ? document.body.clientWidth < window.innerWidth : false;\n}\n\nexport function isObject(value) {\n  const type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport function conditionallyUpdateScrollbar() {\n  const scrollbarWidth = getScrollbarWidth();\n  // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n  const fixedContent = document.querySelectorAll(\n    '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\n  )[0];\n  const bodyPadding = fixedContent\n    ? parseInt(fixedContent.style.paddingRight || 0, 10)\n    : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\n\nexport function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n}\n\nexport function clean($$props) {\n  // TODO support keys\n  // eslint-disable-next-line no-unused-vars\n  const { children, $$scope, $$slots } = $$props;\n  const rest = {};\n  for (const key of Object.keys($$props)) {\n    if (key !== \"children\" && key !== \"$$scope\" && key !== \"$$slots\") {\n      rest[key] = $$props[key];\n    }\n  }\n  return rest;\n}\n\nexport function browserEvent(target, ...args) {\n  target.addEventListener(...args);\n\n  return () => target.removeEventListener(...args);\n}\n\nexport function getNewCarouselActiveIndex(direction, items, activeIndex) {\n  if (direction === 'prev') {\n    return activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n  } else if (direction === 'next') {\n    return activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n  }\n}\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  let className = '';\n  export { className as class };\n  export let size = '';\n  export let bordered = false;\n  export let borderless = false;\n  export let striped = false;\n  export let dark = false;\n  export let hover = false;\n  export let responsive = false;\n\n  const props = clean($$props);\n\n  $: classes = clsx(\n    className,\n    'table',\n    size ? 'table-' + size : false,\n    bordered ? 'table-bordered' : false,\n    borderless ? 'table-borderless' : false,\n    striped ? 'table-striped' : false,\n    dark ? 'table-dark' : false,\n    hover ? 'table-hover' : false\n  );\n\n  $: responsiveClassName =\n    responsive === true ? 'table-responsive' : `table-responsive-${responsive}`;\n</script>\n\n{#if responsive}\n  <div class={responsiveClassName}>\n    <table {...props} class={classes}>\n      <slot />\n    </table>\n  </div>\n{:else}\n  <table {...props} class={classes}>\n    <slot />\n  </table>\n{/if}\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n  export let block = false;\n  export let children = undefined;\n  export let close = false;\n  export let color = 'secondary';\n  export let disabled = false;\n  export let href = '';\n  export let id = '';\n  export let outline = false;\n  export let size = '';\n  export let style = '';\n  export let value = '';\n\n  const props = clean($$props);\n\n  $: ariaLabel = $$props['aria-label'];\n\n  $: classes = clsx(\n    className,\n    { close },\n    close || 'btn',\n    close || `btn${outline ? '-outline' : ''}-${color}`,\n    size ? `btn-${size}` : false,\n    block ? 'btn-block' : false,\n    { active }\n  );\n\n  $: defaultAriaLabel = close ? 'Close' : null;\n</script>\n\n{#if href}\n  <a\n    {...props}\n    {id}\n    class={classes}\n    {disabled}\n    on:click\n    {href}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}>\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </a>\n{:else}\n  <button\n    {...props}\n    {id}\n    class={classes}\n    {disabled}\n    on:click\n    {value}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}>\n    <slot>\n      {#if close}\n        <span aria-hidden=\"true\">×</span>\n      {:else if children}\n        {children}\n      {:else}\n        <slot />\n      {/if}\n    </slot>\n  </button>\n{/if}\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  let className = '';\n  export { className as class };\n\n  export let type = 'text';\n  export let size = undefined;\n  export let bsSize = undefined;\n  export let color = undefined;\n  export let checked = false;\n  export let valid = false;\n  export let invalid = false;\n  export let plaintext = false;\n  export let addon = false;\n  export let value = '';\n  export let files = '';\n  export let readonly;\n  export let multiple = false;\n  export let id = '';\n  export let name = '';\n  export let placeholder = '';\n  export let disabled = false;\n\n  // eslint-disable-next-line no-unused-vars\n  const { type: _omitType, color: _omitColor, ...props } = clean($$props);\n\n  let classes;\n  let tag;\n  $: {\n    const checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    const isNotaNumber = new RegExp('\\\\D', 'g');\n\n    const fileInput = type === 'file';\n    const textareaInput = type === 'textarea';\n    const rangeInput = type === 'range';\n    const selectInput = type === 'select';\n    const buttonInput = type === 'button' || type === 'reset' || type === 'submit';\n    const unsupportedInput = type === 'hidden' || type === 'image';\n    tag = selectInput || textareaInput ? type : 'input';\n\n    let formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = `${formControlClass}-plaintext`;\n      tag = 'input';\n    } else if (fileInput) {\n      formControlClass = `${formControlClass}-file`;\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    } else if (buttonInput) {\n      formControlClass = `btn btn-${color || 'secondary'}`;\n    } else if (rangeInput) {\n      formControlClass = 'form-control-range';\n    } else if (unsupportedInput) {\n      formControlClass = '';\n    }\n\n    if (size && isNotaNumber.test(size)) {\n      console.warn(\n        'Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.'\n      );\n      bsSize = size;\n      size = undefined;\n    }\n\n    classes = clsx(\n      className,\n      invalid && 'is-invalid',\n      valid && 'is-valid',\n      bsSize ? `form-control-${bsSize}` : false,\n      formControlClass\n    );\n  }\n\n  const handleInput = (event) => {\n    value = event.target.value;\n  };\n</script>\n\n{#if tag === 'input'}\n  {#if type === 'text'}\n    <input\n      {...props}\n      {id}\n      type=\"text\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'password'}\n    <input\n      {...props}\n      {id}\n      type=\"password\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'email'}\n    <input\n      {...props}\n      {id}\n      type=\"email\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'file'}\n    <input\n      {...props}\n      {id}\n      type=\"file\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:files\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'checkbox'}\n    <input\n      {...props}\n      {id}\n      type=\"checkbox\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:checked\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'radio'}\n    <input\n      {...props}\n      {id}\n      type=\"radio\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'url'}\n    <input\n      {...props}\n      {id}\n      type=\"url\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'number'}\n    <input\n      {...props}\n      {id}\n      type=\"number\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'date'}\n    <input\n      {...props}\n      {id}\n      type=\"date\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'time'}\n    <input\n      {...props}\n      {id}\n      type=\"time\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'datetime'}\n    <input\n      {...props}\n      {id}\n      type=\"datetime\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'color'}\n    <input\n      {...props}\n      {id}\n      type=\"color\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'range'}\n    <input\n      {...props}\n      {id}\n      type=\"range\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else if type === 'search'}\n    <input\n      {...props}\n      {id}\n      type=\"search\"\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:change\n      on:input\n      bind:value\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder} />\n  {:else}\n    <input\n      {...props}\n      {id}\n      {type}\n      on:blur\n      on:focus\n      on:keydown\n      on:keypress\n      on:keyup\n      on:input={handleInput}\n      on:change={handleInput}\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder}\n      {value} />\n  {/if}\n\n{:else if tag === 'textarea'}\n  <textarea\n    {...props}\n    {id}\n    class={classes}\n    on:blur\n    on:focus\n    on:keydown\n    on:keypress\n    on:keyup\n    on:change\n    on:input\n    bind:value\n    {name}\n    {disabled} />\n\n{:else if tag === 'select' && !multiple}\n  <select\n    {...props}\n    {id}\n    class={classes}\n    on:blur\n    on:focus\n    on:change\n    on:input\n    bind:value\n    {name}\n    {disabled}>\n    <slot />\n  </select>\n\n{:else if tag === 'select' && multiple}\n  <select\n    {...props}\n    {id}\n    multiple\n    class={classes}\n    on:blur\n    on:focus\n    on:change\n    on:input\n    bind:value\n    {name}\n    {disabled}>\n    <slot />\n  </select>\n{/if}\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  import { getColumnSizeClass, isObject } from './utils';\n\n  let className = '';\n\n  const props = clean($$props);\n\n  export { className as class };\n  export let hidden = false;\n  export let check = false;\n  export let size = '';\n  export let fore;\n  export { fore as for };\n  export let id = '';\n  export let xs = '';\n  export let sm = '';\n  export let md = '';\n  export let lg = '';\n  export let xl = '';\n\n  const colWidths = {\n    xs,\n    sm,\n    md,\n    lg,\n    xl\n  };\n  export let widths = Object.keys(colWidths);\n\n  const colClasses = [];\n\n  widths.forEach(colWidth => {\n    let columnProp = $$props[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = colWidth === 'xs';\n    let colClass;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(\n        clsx({\n          [colClass]: columnProp.size || columnProp.size === '',\n          [`order${colSizeInterfix}${columnProp.order}`]:\n            columnProp.order || columnProp.order === 0,\n          [`offset${colSizeInterfix}${columnProp.offset}`]:\n            columnProp.offset || columnProp.offset === 0\n        })\n      );\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  $: classes = clsx(\n    className,\n    hidden ? 'sr-only' : false,\n    check ? 'form-check-label' : false,\n    size ? `col-form-label-${size}` : false,\n    colClasses,\n    colClasses.length ? 'col-form-label' : false\n  );\n</script>\n\n<label {...props} {id} class={classes} for={fore}>\n  <slot />\n</label>\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  export let className = '';\n  export { className as class };\n  export let row = false;\n  export let check = false;\n  export let inline = false;\n  export let disabled = false;\n  export let id = '';\n  export let tag = null;\n\n  const props = clean($$props);\n\n  $: classes = clsx(\n    className,\n    row ? 'row' : false,\n    check ? 'form-check' : 'form-group',\n    check && inline ? 'form-check-inline' : false,\n    check && disabled ? 'disabled' : false\n  );\n</script>\n\n{#if tag === 'fieldset'}\n  <fieldset {...props} {id} class={classes}>\n    <slot />\n  </fieldset>\n{:else}\n  <div {...props} {id} class={classes}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  let className = '';\n  export { className as class };\n  export let listClassName = '';\n  export let size = '';\n  export let ariaLabel = 'pagination';\n\n  const props = clean($$props);\n\n  $: classes = clsx(className);\n\n  $: listClasses = clsx(listClassName, 'pagination', {\n    [`pagination-${size}`]: !!size\n  });\n</script>\n\n<nav {...props} class={classes} aria-label={ariaLabel}>\n  <ul class={listClasses}>\n    <slot />\n  </ul>\n</nav>\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n  export let disabled = false;\n\n  const props = clean($$props);\n\n  $: classes = clsx(className, 'page-item', {\n    active,\n    disabled\n  });\n</script>\n\n<li {...props} class={classes}>\n  <slot />\n</li>\n","<script>\n  import clsx from 'clsx';\n  import { clean } from './utils';\n\n  let className = '';\n  export { className as class };\n  export let next = false;\n  export let previous = false;\n  export let first = false;\n  export let last = false;\n  export let ariaLabel = '';\n  export let href = '';\n\n  const props = clean($$props);\n\n  $: classes = clsx(className, 'page-link');\n\n  let defaultAriaLabel;\n\n  $: if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  $: realLabel = ariaLabel || defaultAriaLabel;\n\n  let defaultCaret;\n  $: if (previous) {\n    defaultCaret = '\\u2039';\n  } else if (next) {\n    defaultCaret = '\\u203A';\n  } else if (first) {\n    defaultCaret = '\\u00ab';\n  } else if (last) {\n    defaultCaret = '\\u00bb';\n  }\n</script>\n\n<a {...props} class={classes} on:click {href}>\n  {#if previous || next || first || last}\n    <span aria-hidden=\"true\">\n      <slot> {defaultCaret} </slot>\n    </span>\n    <span class=\"sr-only\"> {realLabel} </span>\n  {:else}\n    <slot />\n  {/if}\n</a>\n","<script>\r\n\r\n\t//IMPORTACIONES\r\n\r\n\timport  {\r\n\t\tonMount\r\n\t}\r\n\tfrom \"svelte\";\r\n\timport {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n\t\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n\timport Button from \"sveltestrap/src/Button.svelte\";\r\n\timport Input from \"sveltestrap/src/Input.svelte\";\r\n\timport Label from \"sveltestrap/src/Label.svelte\";\r\n\timport FormGroup from \"sveltestrap/src/FormGroup.svelte\";\r\n\timport { Pagination, PaginationItem, PaginationLink } from 'sveltestrap';\r\n\t\r\n\t//VARIABLES PARA PAGINACIÓN Y FUNCIONES\r\n\t\r\n\tlet sugarconsume = [];\r\n\tlet newsugarconsume = {\r\n\t\t\"place\": \"\",\r\n\t\t\"sugarconsume\": 0,\r\n\t\t\"year\": \"\"\t\r\n\t};\r\n\tlet places = [];\r\n\tlet years = [];\r\n\tlet currentplace = \"-\";\r\n\tlet currentYear = \"-\";\r\n\tlet numberElementsPages = 10;\r\n\tlet offset = 0;\r\n\tlet currentPage = 1; \r\n\tlet moreData = true; \r\n\t\r\n\t\r\n\tonMount(getsugarconsume);\r\n\tonMount(getyears);\r\n\r\n\t//FUNCIÓN PARA OBTENER LOS AÑOS Y LUGARES QUE EXISTEN EN SUGARCONSUME\r\n\t\r\n\tasync function getyears() {\r\n\t\tconst res = await fetch(\"/api/v2/sugarconsume\");\r\n\t\tif (res.ok) {\r\n\t\t\tconst json = await res.json();\r\n\t\t\tplaces = json.map((d) => {\r\n\t\t\t\t\treturn d.place;\r\n\t\t\t});\r\n\t\t\tplaces = Array.from(new Set(places)); \r\n\t\t\t\r\n\t\t\tyears = json.map((d) => {\r\n\t\t\t\t\treturn d.year;\r\n\t\t\t});\r\n\r\n\t\t\tyears = Array.from(new Set(years)); \r\n\t\t\tconsole.log(\"Éxito. Existen \" + places.length + \"paises diferentes y \" + years.length + \"años diferentes.\");\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA EJECUTAR EL LOADINITIALDATA Y ASÍ CARGAR LA PÁGINA CON LOS RECURSOS INICIALES\r\n\t\r\n\tasync function loading(){\r\n\t\tdeletesugarconsumeAll();\r\n\t\tconst res = await fetch(\"/api/v2/sugarconsume/loadInitialData\");\r\n\t\tgetsugarconsume()\r\n\t}\r\n\r\n\t//FUNCIÓN PARA OBTENER LA LISTA DE RECURSOS PAGINADA\r\n\r\n\tasync function getsugarconsume() {\r\n\t\tconsole.log(\"Fetching sugarconsume resources...\");\t\r\n\t\tconst res = await fetch(\"/api/v2/sugarconsume?offset=\" + numberElementsPages * offset + \"&limit=\" + numberElementsPages); \r\n\t\tconst next = await fetch(\"/api/v2/sugarconsume?offset=\" + numberElementsPages * (offset + 1) + \"&limit=\" + numberElementsPages); \r\n\t\tif (res.ok && next.ok) {\r\n\t\t\tconsole.log(\"Ok:\");\r\n\t\t\tconst json = await res.json();\r\n\t\t\tconst jsonNext = await next.json();\r\n\t\t\tsugarconsume = json;\r\n\t\t\t\r\n\t\t\tif (jsonNext.length == 0) {\r\n\t\t\t\tmoreData = false;\r\n\t\t\t} else {\r\n\t\t\t\tmoreData = true;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Éxito. Existen \" + sugarconsume.length + \" recursos.\");\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t//FUNCIÓN PARA INSERTAR UN RECURSO\r\n\r\n\r\n\tasync function insertsugarconsume() {\r\n\t\tconsole.log(\"Inserting sugarconsume resource...\");\r\n\t\tif (newsugarconsume.place == \"\"\r\n\t\t\t|| newsugarconsume.place == null\r\n\t\t\t|| newsugarconsume.year == \"\" \r\n\t\t\t|| newsugarconsume.year == null) {\r\n\t\t\t\r\n\t\t\talert(\"No se ha rellenado algún hueco\");\r\n\t\t} else {\r\n\t\t\tconst json = JSON.stringify(newsugarconsume);\r\n\t\t\tconst res = await fetch(\"/api/v2/sugarconsume\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: json,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t}\r\n\t\t\t}).then(function(res) {\r\n\t\t\t\tgetsugarconsume();\r\n\t\t\t\tgetyears();\r\n\t\t\t}); \r\n\t\t\talert(\"Insertado con éxito.\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA BORRAR UN RECURSO CONCRETO\r\n\r\n\r\n\tasync function deletesugarconsume(place, year) {\r\n\t\tconsole.log(\"Deleting sugarconsume resource...\");\r\n\t\tconst res = await fetch(\"/api/v2/sugarconsume/\" + place + \"/\" + year, {\r\n\t\t\tmethod: \"DELETE\"\r\n\t\t}).then(function (res) {\r\n\t\t\tgetsugarconsume();\r\n\t\t\tgetyears();\r\n\t\t});\r\n\t\talert(\"Acción realizada con éxito\");\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA BORRAR TODOS LOS RECURSOS DE SUGARCONSUME\r\n\r\n\r\n\tasync function deletesugarconsumeAll() {\r\n\t\tconsole.log(\"Deleting sugarconsume...\");\r\n\t\tconst res = await fetch(\"/api/v2/sugarconsume/\", {\r\n\t\t\tmethod: \"DELETE\"\r\n\t\t}).then(function (res) {\r\n\t\t\tgetsugarconsume();\r\n\t\t\tgetyears();\r\n\t\t});\r\n\t\talert(\"Acción realizada con éxito\");\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA REALIZAR LAS BÚSQUEDAS\r\n\r\n\r\n\tasync function search(place, year) {\r\n\t\tconsole.log(\"Buscando país: \" + place + \" en año: \" + year);\r\n\t\tvar url = \"/api/v2/sugarconsume\";\r\n\t\tif (place != \"-\" && year != \"-\") {\r\n\t\t\turl = url + \"?place=\" + place + \"&year=\" + year; \r\n\t\t} else if (place != \"-\" && year == \"-\") {\r\n\t\t\turl = url + \"?place=\" + place;\r\n\t\t} else if (place == \"-\" && year != \"-\") {\r\n\t\t\turl = url + \"?year=\" + year;\r\n\t\t}\r\n\t\tconst res = await fetch(url);\r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok:\");\r\n\t\t\tconst json = await res.json();\r\n\t\t\tsugarconsume = json;\t\t\t\r\n\t\t\tconsole.log(\"Éxito. Existen \" + sugarconsume.length + \" recursos.\");\r\n\t\t\talert(\"Búsqueda realizada con éxito\");\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n\t\t\talert(\"Erron al buscar\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\tfunction addOffset (increment) {\r\n\t\toffset += increment;\r\n\t\tcurrentPage += increment;\r\n\t\tgetsugarconsume();\r\n\t}\r\n\t\r\n</script>\r\n\r\n\r\n<main>\r\n\t<h7><strong>API sobre el consumo de azúcar:</strong></h7>\r\n\t{#await sugarconsume}\r\n\t\tLoading sugarconsume resources...\r\n\t{:then sugarconsume}\r\n\t\t\r\n\t\t<!--SELECT PARA ELEGIR EL LUGAR A BUSCAR -->\r\n\t\t<FormGroup> \r\n\t\t\t<Label for=\"selectCountry\"> Búsqueda por lugar </Label>\r\n\t\t\t<Input type=\"select\" name=\"selectCountry\" id=\"selectCountry\" bind:value=\"{currentplace}\">\r\n\t\t\t\t{#each places as place}\r\n\t\t\t\t<option>{place}</option>\r\n\t\t\t\t{/each}\r\n\t\t\t\t<option>-</option>\r\n\t\t\t</Input>\r\n\t\t</FormGroup>\r\n\t\t\t\t\r\n\t\t<!--SELECT PARA ELGIR EL AÑO A BUSCAR  -->\r\n\t\t<FormGroup>\r\n\t\t\t<Label for=\"selectYear\"> Búsqueda por año </Label>\r\n\t\t\t<Input type=\"select\"  name=\"selectYear\" id=\"selectYear\" bind:value=\"{currentYear}\">\r\n\t\t\t\t{#each years as year}\r\n\t\t\t\t<option>{year}</option>\r\n\t\t\t\t{/each}\r\n\t\t\t\t<option>-</option>\r\n\t\t\t</Input>\r\n\t\t</FormGroup>\r\n\r\n\t\t<!-- BOTÓN PARA REALIZAR LA BÚSQUEDA -->\r\n\t\t<Button outline color=\"secondary\" on:click=\"{search(currentplace, currentYear)}\" class=\"button-search\" > <i class=\"fas fa-search\"></i> Buscar </Button>\r\n\t\t\r\n\r\n\t\t<Table bordered>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th> Lugar </th>\r\n\t\t\t\t\t<th> Consumición de azúcar </th>\r\n\t\t\t\t\t<th> Año </th>\r\n\t\t\t\t\t<th> Acciones </th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td> <Input type=\"text\" placeholder=\"lugar\" bind:value=\"{newsugarconsume.place}\" /> </td>\r\n\t\t\t\t\t<td> <Input type=\"number\" placeholder=\"consumo de azúcar\" bind:value=\"{newsugarconsume.sugarconsume}\" /> </td>\r\n\t\t\t\t\t<td> <Input type=\"number\" placeholder=\"año\" bind:value=\"{newsugarconsume.year}\" /> </td>\r\n\t\t\t\t\t<td> <Button outline color=\"primary\" on:click={insertsugarconsume}> <i class=\"far fa-edit\"></i> Insertar </Button> </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{#each sugarconsume as sugarconsumeresource}\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\t\t\t\r\n\t\t\t\t\t\t<a href=\"#/sugarconsume/{sugarconsumeresource.place}/{sugarconsumeresource.year}\">\t\t\r\n\t\t\t\t\t\t\t{sugarconsumeresource.place}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</td> \r\n\t\t\t\t\t<td>{sugarconsumeresource.sugarconsume} </td>\r\n\t\t\t\t\t<td> {sugarconsumeresource.year} </td>\r\n\t\t\t\t\t<td> <Button outline color=\"danger\" on:click=\"{deletesugarconsume(sugarconsumeresource.place, sugarconsumeresource.year)}\"> <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Borrar </Button> </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{/each}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t{/await}\r\n\r\n\t<!-- PAGINACIÓN -->\r\n\t<Pagination style=\"float:right;\" ariaLabel=\"Cambiar de página\">\r\n\r\n\r\n\t\t<PaginationItem class=\"{currentPage === 1 ? 'disabled' : ''}\">\r\n\t\t  <PaginationLink previous href=\"#/sugarconsumeAPI\" on:click=\"{() => addOffset(-1)}\" />\r\n\t\t</PaginationItem>\r\n\t\t\r\n\t\t{#if currentPage != 1}\r\n\t\t<PaginationItem>\r\n\t\t\t<PaginationLink href=\"#/sugarconsumeAPI\" on:click=\"{() => addOffset(-1)}\" >{currentPage - 1}</PaginationLink>\r\n\t\t</PaginationItem>\r\n\t\t{/if}\r\n\t\t<PaginationItem active>\r\n\t\t\t<PaginationLink href=\"#/sugarconsumeAPI\" >{currentPage}</PaginationLink>\r\n\t\t</PaginationItem>\r\n\r\n\t\t{#if moreData}\r\n\t\t<PaginationItem >\r\n\t\t\t<PaginationLink href=\"#/sugarconsumeAPI\" on:click=\"{() => addOffset(1)}\">{currentPage + 1}</PaginationLink>\r\n\t\t</PaginationItem>\r\n\t\t{/if}\r\n\r\n\t\t<PaginationItem class=\"{moreData ? '' : 'disabled'}\">\r\n\t\t  <PaginationLink next href=\"#/sugarconsumeAPI\" on:click=\"{() => addOffset(1)}\"/>\r\n\t\t</PaginationItem>\r\n\r\n\t</Pagination>\r\n\r\n\t<!-- BOTÓN POP PARA VOLVER ATRÁS -->\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n\t<!-- BOTÓN PARA BORRAR TODO EL CONTENIDO DE SUGARCONSUME -->\r\n\t<Button outline on:click={deletesugarconsumeAll} color=\"danger\"> <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Borrar todo </Button>\r\n\t<!-- BOTÓN PARA CARGAR EL CONTENIDO COMO ESTABA INICIALMENTE -->\r\n\t<Button outline on:click={loading} color=\"primary\"> <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Cargar </Button>\r\n</main>\r\n","<script>\r\n\r\n\t//IMPORTACIONES\r\n\r\n\timport  {\r\n\t\tonMount\r\n\t}\r\n\tfrom \"svelte\";\r\n\timport {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n\t\r\n\timport Table from \"sveltestrap/src/Table.svelte\";\r\n\timport Button from \"sveltestrap/src/Button.svelte\";\r\n\timport Input from \"sveltestrap/src/Input.svelte\";\r\n\timport Label from \"sveltestrap/src/Label.svelte\";\r\n\timport FormGroup from \"sveltestrap/src/FormGroup.svelte\";\r\n\timport { Pagination, PaginationItem, PaginationLink } from 'sveltestrap';\r\n\t\r\n\t//VARIABLES PARA PAGINACIÓN Y FUNCIONES\r\n\t\r\n\tlet indice_de_masa_corporal = [];\r\n\tlet newindice_de_masa_corporal = {\r\n\t\t\"place\": \"\",\r\n\t\t\"indice_de_masa_corporal\": 0,\r\n\t\t\"year\": \"\"\t\r\n\t};\r\n\tlet places = [];\r\n\tlet years = [];\r\n\tlet currentplace = \"-\";\r\n\tlet currentYear = \"-\";\r\n\tlet numberElementsPages = 10;\r\n\tlet offset = 0;\r\n\tlet currentPage = 1; \r\n\tlet moreData = true; \r\n\t\r\n\t\r\n\tonMount(getindice_de_masa_corporal);\r\n\tonMount(getyears);\r\n\r\n\r\n\t\r\n\tasync function getyears() {\r\n\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal\");\r\n\t\tif (res.ok) {\r\n\t\t\tconst json = await res.json();\r\n\t\t\tplaces = json.map((d) => {\r\n\t\t\t\t\treturn d.place;\r\n\t\t\t});\r\n\t\t\tplaces = Array.from(new Set(places)); \r\n\t\t\t\r\n\t\t\tyears = json.map((d) => {\r\n\t\t\t\t\treturn d.year;\r\n\t\t\t});\r\n\r\n\t\t\tyears = Array.from(new Set(years)); \r\n\t\t\tconsole.log(\"Paises: \" + places.length + \"Años \" + years.length);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA INICIALIZAR VALORES\r\n\t\r\n\tasync function loading(){\r\n\t\tdeleteindice_de_masa_corporalAll();\r\n\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal/loadInitialData\");\r\n\t\tgetindice_de_masa_corporal()\r\n\t}\r\n\r\n\t//FUNCIÓN PARA PAGINAR GET\r\n\r\n\tasync function getindice_de_masa_corporal() {\r\n\t\tconsole.log(\"Fetching indice_de_masa_corporal resources...\");\t\r\n\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal?offset=\" + numberElementsPages * offset + \"&limit=\" + numberElementsPages); \r\n\t\tconst next = await fetch(\"/api/v1/indice_de_masa_corporal?offset=\" + numberElementsPages * (offset + 1) + \"&limit=\" + numberElementsPages); \r\n\t\tif (res.ok && next.ok) {\r\n\t\t\tconsole.log(\"Ok:\");\r\n\t\t\tconst json = await res.json();\r\n\t\t\tconst jsonNext = await next.json();\r\n\t\t\tindice_de_masa_corporal = json;\r\n\t\t\t\r\n\t\t\tif (jsonNext.length == 0) {\r\n\t\t\t\tmoreData = false;\r\n\t\t\t} else {\r\n\t\t\t\tmoreData = true;\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Existen \" + indice_de_masa_corporal.length + \" recursos.\");\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t//FUNCIÓN PARA INSERTAR UN RECURSO\r\n\r\n\r\n\tasync function insertindice_de_masa_corporal() {\r\n\t\tconsole.log(\"Inserting indice_de_masa_corporal resource...\");\r\n\t\tif (newindice_de_masa_corporal.place == \"\"\r\n\t\t\t|| newindice_de_masa_corporal.place == null\r\n\t\t\t|| newindice_de_masa_corporal.year == \"\" \r\n\t\t\t|| newindice_de_masa_corporal.year == null) {\r\n\t\t\t\r\n\t\t\talert(\"No se ha rellenado algún hueco\");\r\n\t\t} else {\r\n\t\t\tconst json = JSON.stringify(newindice_de_masa_corporal);\r\n\t\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: json,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t}\r\n\t\t\t}).then(function(res) {\r\n\t\t\t\tgetindice_de_masa_corporal();\r\n\t\t\t\tgetyears();\r\n\t\t\t}); \r\n\t\t\talert(\"Insertado con éxito.\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA BORRAR UN RECURSO CONCRETO\r\n\r\n\r\n\tasync function deleteindice_de_masa_corporal(place, year) {\r\n\t\tconsole.log(\"Deleting indice_de_masa_corporal resource...\");\r\n\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal/\" + place + \"/\" + year, {\r\n\t\t\tmethod: \"DELETE\"\r\n\t\t}).then(function (res) {\r\n\t\t\tgetindice_de_masa_corporal();\r\n\t\t\tgetyears();\r\n\t\t});\r\n\t\talert(\"Éxito\");\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA BORRAR TODO\r\n\r\n\r\n\tasync function deleteindice_de_masa_corporalAll() {\r\n\t\tconsole.log(\"Deleting all...\");\r\n\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal/\", {\r\n\t\t\tmethod: \"DELETE\"\r\n\t\t}).then(function (res) {\r\n\t\t\tgetindice_de_masa_corporal();\r\n\t\t\tgetyears();\r\n\t\t});\r\n\t\talert(\"Éxito\");\r\n\t}\r\n\r\n\r\n\t//FUNCIÓN PARA REALIZAR LAS BÚSQUEDAS\r\n\r\n\r\n\tasync function search(place, year) {\r\n\t\tconsole.log(\"Buscando país: \" + place + \" en año: \" + year);\r\n\t\tvar url = \"/api/v1/indice_de_masa_corporal\";\r\n\t\tif (place != \"-\" && year != \"-\") {\r\n\t\t\turl = url + \"?place=\" + place + \"&year=\" + year; \r\n\t\t} else if (place != \"-\" && year == \"-\") {\r\n\t\t\turl = url + \"?place=\" + place;\r\n\t\t} else if (place == \"-\" && year != \"-\") {\r\n\t\t\turl = url + \"?year=\" + year;\r\n\t\t}\r\n\t\tconst res = await fetch(url);\r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok:\");\r\n\t\t\tconst json = await res.json();\r\n\t\t\tindice_de_masa_corporal = json;\t\t\t\r\n\t\t\tconsole.log(\"Existen \" + indice_de_masa_corporal.length + \" recursos.\");\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tfunction addOffset (increment) {\r\n\t\toffset += increment;\r\n\t\tcurrentPage += increment;\r\n\t\tgetindice_de_masa_corporal();\r\n\t}\r\n\t\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<main>\r\n\t{#await indice_de_masa_corporal}\r\n\t\tLoading indice_de_masa_corporal resources...\r\n\t{:then indice_de_masa_corporal}\r\n\t\t\r\n<!--Busquedas  -->\r\n\t\t<FormGroup> \r\n\t\t\t<Label for=\"selectCountry\"> Búsqueda por pais </Label>\r\n\t\t\t<Input type=\"select\" name=\"selectCountry\" id=\"selectCountry\" bind:value=\"{currentplace}\">\r\n\t\t\t\t{#each places as place}\r\n\t\t\t\t<option>{place}</option>\r\n\t\t\t\t{/each}\r\n\t\t\t\t<option>-</option>\r\n\t\t\t</Input>\r\n\t\t</FormGroup>\r\n\t\t\t\t\r\n\t\t<FormGroup>\r\n\t\t\t<Label for=\"selectYear\"> Búsqueda por año </Label>\r\n\t\t\t<Input type=\"select\"  name=\"selectYear\" id=\"selectYear\" bind:value=\"{currentYear}\">\r\n\t\t\t\t{#each years as year}\r\n\t\t\t\t<option>{year}</option>\r\n\t\t\t\t{/each}\r\n\t\t\t\t<option>-</option>\r\n\t\t\t</Input>\r\n\t\t</FormGroup>\r\n\r\n\t\t<Button outline color=\"secondary\" on:click=\"{search(currentplace, currentYear)}\" class=\"button-search\" > <i class=\"fas fa-search\"></i> Buscar </Button>\r\n\t\t\r\n\r\n\t\t<Table bordered>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th> LUGAR </th>\r\n\t\t\t\t\t<th> IMC</th>\r\n\t\t\t\t\t<th> AÑO </th>\r\n\t\t\t\t\t<th> Acciones </th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td> <Input type=\"text\" placeholder=\"pais\" bind:value=\"{newindice_de_masa_corporal.place}\" /> </td>\r\n\t\t\t\t\t<td> <Input type=\"number\" placeholder=\"indice de masa corporal\" bind:value=\"{newindice_de_masa_corporal.indice_de_masa_corporal}\" /> </td>\r\n\t\t\t\t\t<td> <Input type=\"number\" placeholder=\"año\" bind:value=\"{newindice_de_masa_corporal.year}\" /> </td>\r\n\t\t\t\t\t<td> <Button outline color=\"primary\" on:click={insertindice_de_masa_corporal}> <i class=\"far fa-edit\"></i> AÑADIR </Button> </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{#each indice_de_masa_corporal as indices_de_masa_corporal}\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\t\t\t\r\n\t\t\t\t\t\t<a href=\"#/indice_de_masa_corporal/{indices_de_masa_corporal.place}/{indices_de_masa_corporal.year}\">\t\t\r\n\t\t\t\t\t\t\t{indices_de_masa_corporal.place}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</td> \r\n\t\t\t\t\t<td>{indices_de_masa_corporal.indice_de_masa_corporal} </td>\r\n\t\t\t\t\t<td> {indices_de_masa_corporal.year} </td>\r\n\t\t\t\t\t<td> <Button outline color=\"danger\" on:click=\"{deleteindice_de_masa_corporal(indices_de_masa_corporal.place, indices_de_masa_corporal.year)}\"> <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> ELIMINAR </Button> </td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{/each}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t{/await}\r\n\r\n\r\n\t<!-- PAGINACIÓN -->\r\n\t<Pagination style=\"float:right;\" ariaLabel=\"Cambiar de página\">\r\n\r\n\r\n\t\t<PaginationItem class=\"{currentPage === 1 ? 'disabled' : ''}\">\r\n\t\t  <PaginationLink previous href=\"#/indice_de_masa_corporal\" on:click=\"{() => addOffset(-1)}\" />\r\n\t\t</PaginationItem>\r\n\t\t\r\n\t\t{#if currentPage != 1}\r\n\t\t<PaginationItem>\r\n\t\t\t<PaginationLink href=\"#/indice_de_masa_corporal\" on:click=\"{() => addOffset(-1)}\" >{currentPage - 1}</PaginationLink>\r\n\t\t</PaginationItem>\r\n\t\t{/if}\r\n\t\t<PaginationItem active>\r\n\t\t\t<PaginationLink href=\"#/indice_de_masa_corporal\" >{currentPage}</PaginationLink>\r\n\t\t</PaginationItem>\r\n\r\n\t\t{#if moreData}\r\n\t\t<PaginationItem >\r\n\t\t\t<PaginationLink href=\"#/indice_de_masa_corporal\" on:click=\"{() => addOffset(1)}\">{currentPage + 1}</PaginationLink>\r\n\t\t</PaginationItem>\r\n\t\t{/if}\r\n\r\n\t\t<PaginationItem class=\"{moreData ? '' : 'disabled'}\">\r\n\t\t  <PaginationLink next href=\"#/indice_de_masa_corporal\" on:click=\"{() => addOffset(1)}\"/>\r\n\t\t</PaginationItem>\r\n\r\n\t</Pagination>\r\n\r\n\t<!-- BOTÓN ATRÁS -->\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> ATRAS </Button>\r\n\t<!-- BOTÓN PARA BORRAR TODO EL CONTENIDO  -->\r\n\t<Button outline on:click={deleteindice_de_masa_corporalAll} color=\"danger\"> <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> BORRAR TODO </Button>\r\n\t<!-- BOTÓN PARA RESETEAR TODO -->\r\n\t<Button outline on:click={loading} color=\"primary\"> <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> PRIMEROS DATOS</Button>\r\n</main>\r\n","<script>\r\n    import {\r\n\t\tonMount\r\n\t} from \"svelte\";\r\n    import {pop} from \"svelte-spa-router\";\r\n    import Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import Input from \"sveltestrap/src/Input.svelte\";\r\n\r\n\r\n    export let params = {};\r\n    let indice_de_masa_corporal = {};\r\n    let updatedPlace = \"\";\r\n    let updatedindice_de_masa_corporal = 0;\r\n    let updatedYear = 0;\r\n    let errorMsg = \"\";\r\n\r\n    onMount(getindices_de_masa_corporal);\r\n\r\n\tasync function getindices_de_masa_corporal() {\r\n        \r\n\t\tconsole.log(\"Fetching indice_de_masa_corporal resource...\");\r\n\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal/\" + params.placename + \"/\" + params.year);\r\n\r\n\t\tif (res.ok) {\r\n\t\t\tconsole.log(\"Ok:\");\r\n            const json = await res.json();\r\n            indice_de_masa_corporal = json;\r\n            updatedPlace = indice_de_masa_corporal[0].place;\r\n            updatedindice_de_masa_corporal = indice_de_masa_corporal[0].indice_de_masa_corporal;\r\n            updatedYear = indice_de_masa_corporal[0].year;\r\n\t\t\tconsole.log(\"Received indice_de_masa_corporal resource.\");\r\n\t\t} else {\r\n            errorMsg = res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\" + errorMsg);\r\n            \r\n        }\r\n\t}\r\n\r\n    \r\n    async function updateindice_de_masa_corporal(){\r\n\r\n        console.log(\"Updating indice_de_masa_corporal resources...\" + JSON.stringify(params.placename));\r\n        console.log(params.placename);\r\n        console.log(updatedindice_de_masa_corporal);\r\n        console.log(parseInt(params.year));\r\n        if (updatedindice_de_masa_corporal == \"\") {\r\n\t\t\talert(\"el imc se ha dejado en blanco\");\r\n\t\t} else{\r\n\t\tconst res = await fetch(\"/api/v1/indice_de_masa_corporal/\" + params.placename + \"/\" + params.year, {\r\n            method: \"PUT\",\r\n\t\t\tbody: JSON.stringify({\r\n                place : params.placename,\r\n                indice_de_masa_corporal : updatedindice_de_masa_corporal,\r\n                year : parseInt(params.year)\r\n            }  \r\n            ),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n            }\r\n\t\t}).then(function (res) {\r\n\t\t\tgetindices_de_masa_corporal();\r\n\t\t});\r\n        alert(\"Recurso actualizado con éxito\");\r\n        }\r\n    }\r\n</script>\r\n<main>\r\n    <h3>Edit indice_de_masa_corporal <strong>{params.placename} </strong></h3>\r\n{#await indice_de_masa_corporal}\r\n    Loading indice_de_masa_corporal...\r\n{:then indice_de_masa_corporal}\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th>LUGAR</th>\r\n                <th>IMC </th>\r\n                <th>Año</th>\r\n                <th>Acciones</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>{updatedPlace}</td>\r\n                <td><input bind:value=\"{updatedindice_de_masa_corporal}\"></td>\r\n                <td>{updatedYear}</td>\r\n                <td> <Button outline  color=\"primary\" on:click={updateindice_de_masa_corporal}>Update</Button> </td>\r\n            </tr>\r\n        </tbody>\r\n    </Table>\r\n{/await}\r\n{#if errorMsg}\r\n    <p style=\"color:red\"> ERROR: {errorMsg}</p>\r\n{/if}\r\n<Button outline color=\"secondary\" on:click=\"{pop}\">ATRAS</Button>\r\n</main>","<script>\r\n    //IMPORTACIONES\r\n    import {\r\n\t\tonMount\r\n\t} from \"svelte\";\r\n    import {pop} from \"svelte-spa-router\";\r\n    import Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import Input from \"sveltestrap/src/Input.svelte\";\r\n    \r\n\r\n\r\n    export let params = {};\r\n    let sugarconsume = {};\r\n    let updatedPlace = \"\";\r\n    let updatedSugarconsume = 0;\r\n    let updatedYear = 0;\r\n    let errorMsg = \"\";\r\n\r\n    onMount(getsugarconsumes);\r\n\r\n    //FUNCIÓN PARA OBTENER UN RECURSO ESPECÍFICO\r\n\r\n\tasync function getsugarconsumes() {\r\n        \r\n\t\tconsole.log(\"Fetching sugarconsume resource...\");\r\n\t\tconst res = await fetch(\"/api/v2/sugarconsume/\" + params.placename + \"/\" + params.year);\r\n\t\tif (res.ok) {\r\n            const json = await res.json();\r\n            sugarconsume = json;\r\n            updatedPlace = sugarconsume.place;\r\n            updatedSugarconsume = sugarconsume.sugarconsume;\r\n            updatedYear = sugarconsume.year;\r\n            console.log(\"Received sugarconsume resource.\");\r\n            alert(\"Usted se encuentra sobre un recurso concreto\");\r\n\t\t} else {\r\n            errorMsg = res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\" + errorMsg);\r\n            alert(\"No existe dicho usuario\");\r\n            \r\n        }\r\n\t}\r\n\r\n\r\n    //FUNCIÓN PARA ACTUALIZAR UN RECURSO\r\n    \r\n    async function updatesugarconsume(){\r\n\r\n        console.log(\"Actualizando recurso: \" + JSON.stringify(params.placename));\r\n        console.log(params.placename);\r\n        console.log(updatedSugarconsume);\r\n        console.log(parseInt(params.year));\r\n\t\tconst res = await fetch(\"/api/v2/sugarconsume/\" + params.placename + \"/\" + params.year, {\r\n            method: \"PUT\",\r\n\t\t\tbody: JSON.stringify({\r\n                place : params.placename,\r\n                sugarconsume : updatedSugarconsume,\r\n                year : parseInt(params.year)\r\n            }  \r\n            ),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n            }\r\n\t\t}).then(function (res) {\r\n                getsugarconsumes();\r\n\t\t});\r\n        alert(\"Recurso actualizado con éxito\");\r\n        \r\n\r\n    }\r\n</script>\r\n<main>\r\n    <h3>Edit Sugarconsume <strong>{params.placename} </strong></h3>\r\n{#await sugarconsume}\r\n    Loading sugarconsume...\r\n{:then sugarconsume}\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th>Lugar</th>\r\n                <th>Consumición de azúcar</th>\r\n                <th>Año</th>\r\n                <th>Acciones</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>{updatedPlace}</td>\r\n                <td><input bind:value=\"{updatedSugarconsume}\"></td>\r\n                <td>{updatedYear}</td>\r\n                <td> <Button outline  color=\"primary\" on:click={updatesugarconsume}>Update</Button> </td>\r\n            </tr>\r\n        </tbody>\r\n    </Table>\r\n{/await}\r\n{#if errorMsg}\r\n    <p style=\"color:red\"> ERROR: {errorMsg}</p>\r\n{/if}\r\n<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</main>","<script>\r\n\r\n\r\nasync function loadGraph(){\r\n\r\nlet MyData = [];\r\n\r\n//const resData = await fetch(\"/back\");\r\n//MyData = await resData.json();\r\n\r\nHighcharts.chart('container', {\r\n    chart: {\r\n        type: 'bar'\r\n    },\r\n    title: {\r\n        text: 'Historic World Population by Region'\r\n    },\r\n    subtitle: {\r\n        text: 'Source: <a href=\"https://en.wikipedia.org/wiki/World_population\">Wikipedia.org</a>'\r\n    },\r\n    xAxis: {\r\n        categories: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\r\n        title: {\r\n            text: null\r\n        }\r\n    },\r\n    yAxis: {\r\n        min: 0,\r\n        title: {\r\n            text: 'Population (millions)',\r\n            align: 'high'\r\n        },\r\n        labels: {\r\n            overflow: 'justify'\r\n        }\r\n    },\r\n    tooltip: {\r\n        valueSuffix: ' millions'\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            dataLabels: {\r\n                enabled: true\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'top',\r\n        x: -40,\r\n        y: 80,\r\n        floating: true,\r\n        borderWidth: 1,\r\n        backgroundColor:\r\n            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n        shadow: true\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    series: [{\r\n        name: 'Year 1800',\r\n        data: [107, 31, 635, 203, 2]\r\n    }, {\r\n        name: 'Year 1900',\r\n        data: [133, 156, 947, 408, 6]\r\n    }, {\r\n        name: 'Year 2000',\r\n        data: [814, 841, 3714, 727, 31]\r\n    }, {\r\n        name: 'Year 2016',\r\n        data: [1216, 1001, 4436, 738, 40]\r\n    }]\r\n});\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/series-label.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Basic line chart showing trends in a dataset. This chart includes the\r\n            <code>series-label</code> module, which adds a label to each line for\r\n            enhanced readability.\r\n        </p>\r\n    </figure>\r\n</main>","<script>\r\n\t\r\n\timport Inicio from './Inicio.svelte.html';\r\n\timport MyContentTable from './sugarconsumeAPI/MyContentTable.svelte.html';\r\n\timport imcTable from './imcAPI/imcTable.svelte.html';\r\n\timport EditValue from './imcAPI/EditValue.svelte.html';\r\n\timport NotFound from './NotFound.svelte.html';\r\n\timport editResource from './sugarconsumeAPI/editResource.svelte.html'\r\n\timport Router from 'svelte-spa-router';\r\n\timport MyGraph from './sugarconsumeAPI/MyGraph.svelte.html';\r\n\tconst routes = {\r\n\t\t\"/\" : Inicio,\r\n\t\t\"/sugarconsumeAPI\" : MyContentTable,\r\n\t\t\"/indice_de_masa_corporal/:placename/:year\" : EditValue,\r\n\t\t\"/indice_de_masa_corporal\" : imcTable,\r\n\t\t\"/sugarconsume/:placename/:year\" : editResource,\r\n\t\t\"/sugarconsumeAPI/MyGraph\" : MyGraph,\r\n\t\t\"*\" : NotFound\r\n\t}\r\n\r\n</script>\r\n\r\n\r\n<main>\r\n\t<h1>Gestión de API</h1>\r\n\t<Router {routes} />\r\n</main>\r\n","import App from './App.svelte.html';\r\n\r\nconst app = new App({\r\n\ttarget: document.querySelector(\"#svelteApp\"),\r\n\t\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","to_number","set_data","set_input_value","input","set_style","important","setProperty","select_option","select","option","__value","selected","select_options","indexOf","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","then","error","catch","pending","get_spread_update","levels","updates","to_null_out","accounted_for","n","bind","bound","create_component","mount_component","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","splice","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","cleanup","sync","unsubscribers","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","cb","history","back","setTimeout","routes","prefix","RouteItem","path","_sveltesparouter","charAt","RegExp","pattern","keys","str","loose","tmp","ext","arr","split","shift","substring","regexparam","route","conditions","userData","_pattern","_keys","startsWith","matches","exec","out","routesList","componentParams","dispatch","dispatchNextTick","match","checkConditions","toVal","mix","y","x","arguments","getColumnSizeClass","isXs","colWidth","colSize","clean","$$props","className","size","bordered","borderless","striped","dark","hover","responsive","classes","clsx","responsiveClassName","active","close","color","disabled","id","outline","ariaLabel","defaultAriaLabel","bsSize","checked","valid","invalid","plaintext","addon","files","readonly","multiple","placeholder","_omitType","_omitColor","tag","checkInput","isNotaNumber","fileInput","textareaInput","rangeInput","buttonInput","unsupportedInput","formControlClass","test","console","warn","selected_option","querySelector","querySelectorAll","hidden","check","fore","xs","sm","md","lg","xl","colWidths","widths","colClasses","columnProp","colClass","isObject","colSizeInterfix","order","offset","row","inline","listClassName","listClasses","next","previous","first","last","defaultCaret","realLabel","place","sugarconsume","year","newsugarconsume","places","years","currentplace","currentYear","currentPage","moreData","getyears","res","fetch","ok","json","log","getsugarconsume","jsonNext","deletesugarconsumeAll","method","alert","addOffset","increment","JSON","stringify","body","headers","Accept","Content-Type","url","indice_de_masa_corporal","newindice_de_masa_corporal","getindice_de_masa_corporal","deleteindice_de_masa_corporalAll","placename","params","updatedPlace","updatedindice_de_masa_corporal","updatedYear","errorMsg","getindices_de_masa_corporal","status","statusText","parseInt","updatedSugarconsume","getsugarconsumes","loadGraph","Highcharts","chart","title","subtitle","xAxis","categories","yAxis","min","align","labels","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","legend","layout","verticalAlign","floating","borderWidth","backgroundColor","defaultOptions","shadow","credits","series","/","Inicio","/sugarconsumeAPI","MyContentTable","/indice_de_masa_corporal/:placename/:year","EditValue","/indice_de_masa_corporal","imcTable","/sugarconsume/:placename/:year","editResource","/sugarconsumeAPI/MyGraph","MyGraph","*","NotFound"],"mappings":"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"}